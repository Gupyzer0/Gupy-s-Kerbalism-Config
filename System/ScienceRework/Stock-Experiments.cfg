// STOCK EXPERIMENTS

@KERBALISM_EXPERIMENT_VALUES:NEEDS[FeatureScience]
{
	STOCK
	{
		crewReport
		{
			ECCost = 0.01 							// the light must be on...
			size = 0.2
			value = 3								//nerfed science value slightly, due to another longer crewed experiment being available (5->3), removed atmospheric biome mask.
			duration = 294
			requirements =
			ResourceRates =
		}

		evaReport
		{
			ECCost = 0.02
			size = 0.25
			value = 10								//slightly increased value (8->10)
			duration = 45	// removed atmospheric situatons (i'm sorry but astronauts don't EVA inside an atmosphere)
			requirements =
			ResourceRates =
		}
    
    	// KSP 1.11 golf playing
		evaScience
		{
			size = 0.25
			value = 10								//nerfed value (25->10)
		}

		surfaceSample
		{
			ECCost = 10.0							//massive EC/s for unmanned probes (EVA consumption gets nerfed later in this file)
			size = 986								//large size to account for lab processing time.
			value = 22								//nerfed science value (40->22), removed oceanic samples due to dedicated experiment added
			duration = 55							//drilling is probably reasonably quick.
			requirements =
			EVAMultiplier = 150						//divides EC cost with this value.
			EVArequirements = AstronautComplexLevelMin:2			//separate requirements for EVAs. must be defined in full (doesn't apply the ones above beforehand)
			ResourceRates =
		}

		mysteryGoo
		{
			ECCost = 0.18
			size = 429								//same as above, massive data scale for lab processing.
			value = 6								// nerfed (13->6), also nuked biome mask (makes no sense that the samples would be different)
			duration = 641
			requirements =
			ResourceRates =
      		samples = 1 // Goo-Storage-Upgrade => 3
		}

		mobileMaterialsLab
		{
			ECCost = 2.04
			size = 3084
			value = 18								//value nerfed (32->18), nuked biome mask (makes no sense that the sampes would be different)
			duration = 1246							//20-ish min. (low duration due to aids with manually flying in atmo)
			requirements =
			ResourceRates =
      		samples = 1 // MatBay-Storage-Upgrade => 2
		}

		temperatureScan
		{
			ECCost = 0.002						//all sensors will have very low EC/s consumption
			size = 0.45								//reasonably small scale, as it's a very early experiment
			value = 3									//nerfed value (8->3) due to it being an early unlock, left biome/situations unchanged
			duration = 138
			requirements =
			ResourceRates =
		}

		atmosphereAnalysis
		{
			ECCost = 2.84
			size = 6724								// long lab analysis for the sample.
			value = 16								// nerfed value (24->16). Removed biome mask for flying high. (i doubt the atmo has biome specific composition that high up)
			duration = 18							// quick experiment, but it's a sample, therefore requires lab analysis. the analysis will be long.
			requirements =
			ResourceRates =
		}

		barometerScan
		{
			ECCost = 0.05
			size = 3.5	  					  // you have to "steram" your first barometer scans
			value = 9									// nerfed value (12->9), changed situations to atmo/landed/splashed, biome masks landed/splashed/flying low, made it require atmosphere in all cases. (there's no pressure if there's no atmosphere, i'm sorry)
			duration = 916						//15 minutes+
			requirements =
			ResourceRates =
		}

		seismicScan
		{
			ECCost = 0.0076
			size = 200
			value = 12								// nerfed value (22-12), left situations/biomes unchanged
			duration = 317248					// first moderately long-term experiment, 2 weeks+ required.
			requirements =
			ResourceRates =
		}

		gravityScan
		{
			ECCost = 0.041
			size = 26014
			value = 16								// nerfed value, (22->16)
			duration = 1959086				//first properly long experiment, takes 90+ days to complete. Situations unchanged, biomes = landed/splashed only.
			requirements = OrbitMinInclination:50,OrbitMaxInclination:130
			ResourceRates =
		}

		asteroidSample								//the only change that takes effect is size and value
		{
			size = 1694								// long lab analysis for the sample.
			value = 35								// biome should be irrelevant, asteroids don't have biomes, and flying above a planet's biome should also be irrelevant for the sample.
		}

		cometSample_short
		{
			size = 1694
			value = 100
		}
    
    	cometSample_intermediate
		{
			size = 1694
			value = 150
		}
    
    	cometSample_long
		{
			size = 1694
			value = 300
		}
    
    	cometSample_interstellar
		{
			size = 1694
			value = 1000
		}

		infraredTelescope
		{
			ECCost = 5
			size = 289386462						// humongous data scale, reasons below.
			value = 440								// 20 times the value (reason below),unchanged situation/biome mask. limited to kerbin high orbit only.
			duration = 230083200					// 12. yes. 12. (years if it's unclear) - reason - hubble has been operating for close to 30 years at this point, and still provides invaluable data. This should serve the same function in ksp
			requirements =
			ResourceRates =
		}

		magnetometer
		{
			ECCost = 0.2
			size = 2.6
			value = 5
			duration = 151200 // 7 days
		}
	}
}

// ----------------------------------------------------------------------------
// Science Definitions 
// ----------------------------------------------------------------------------

@EXPERIMENT_DEFINITION:HAS[#id[surfaceSample]]:NEEDS[FeatureScience]:FOR[zzzKerbalismDefault]
{
	@baseValue = #$@KERBALISM_EXPERIMENT_VALUES/STOCK/surfaceSample/value$
	@dataScale = #$@KERBALISM_EXPERIMENT_VALUES/STOCK/surfaceSample/size$
	@dataScale /= #$baseValue$

  KERBALISM_EXPERIMENT
	{
    Situation = SrfLanded@Biomes
    SampleMass = 0.025
	}
}

@EXPERIMENT_DEFINITION:HAS[#id[crewReport]]:NEEDS[FeatureScience]:FOR[zzzKerbalismDefault]
{
	@baseValue = #$@KERBALISM_EXPERIMENT_VALUES/STOCK/crewReport/value$
	@dataScale = #$@KERBALISM_EXPERIMENT_VALUES/STOCK/crewReport/size$
	@dataScale /= #$baseValue$

  KERBALISM_EXPERIMENT
	{
    Situation = Surface@Biomes
    Situation = FlyingLow
    Situation = FlyingHigh
    Situation = InSpaceLow
    Situation = InSpaceHigh
	}
}

@EXPERIMENT_DEFINITION:HAS[#id[evaReport]]:NEEDS[FeatureScience]:FOR[zzzKerbalismDefault]
{
	@baseValue = #$@KERBALISM_EXPERIMENT_VALUES/STOCK/evaReport/value$
	@dataScale = #$@KERBALISM_EXPERIMENT_VALUES/STOCK/evaReport/size$
	@dataScale /= #$baseValue$

  KERBALISM_EXPERIMENT
	{
    Situation = Surface@Biomes
    Situation = InSpaceLow
    Situation = InSpaceHigh
	}
}

@EXPERIMENT_DEFINITION:HAS[#id[evaScience]]:NEEDS[FeatureScience]:FOR[zzzKerbalismDefault]
{
	@baseValue = #$@KERBALISM_EXPERIMENT_VALUES/STOCK/evaScience/value$
	@dataScale = #$@KERBALISM_EXPERIMENT_VALUES/STOCK/evaScience/size$
	@dataScale /= #$baseValue$
}



@EXPERIMENT_DEFINITION:HAS[#id[mobileMaterialsLab]]:NEEDS[FeatureScience]:FOR[zzzKerbalismDefault]
{
	@baseValue = #$@KERBALISM_EXPERIMENT_VALUES/STOCK/mobileMaterialsLab/value$
	@dataScale = #$@KERBALISM_EXPERIMENT_VALUES/STOCK/mobileMaterialsLab/size$
	@dataScale /= #$baseValue$

  KERBALISM_EXPERIMENT
	{
    SampleMass = 0.032
    Situation = SrfLanded
    Situation = SrfSplashed
    Situation = FlyingLow
    Situation = FlyingHigh
    Situation = InSpaceLow
    Situation = InSpaceHigh
	}
}

@EXPERIMENT_DEFINITION:HAS[#id[temperatureScan]]:NEEDS[FeatureScience]:FOR[zzzKerbalismDefault]
{
	@baseValue = #$@KERBALISM_EXPERIMENT_VALUES/STOCK/temperatureScan/value$
	@dataScale = #$@KERBALISM_EXPERIMENT_VALUES/STOCK/temperatureScan/size$
	@dataScale /= #$baseValue$

  KERBALISM_EXPERIMENT
	{
    Situation = Surface@Biomes
    Situation = FlyingLow@Biomes
    Situation = FlyingHigh
    Situation = InSpaceLow
    Situation = InSpaceHigh
	}
}

@EXPERIMENT_DEFINITION:HAS[#id[seismicScan]]:NEEDS[FeatureScience]:FOR[zzzKerbalismDefault]
{
	@baseValue = #$@KERBALISM_EXPERIMENT_VALUES/STOCK/seismicScan/value$
	@dataScale = #$@KERBALISM_EXPERIMENT_VALUES/STOCK/seismicScan/size$
	@dataScale /= #$baseValue$

  KERBALISM_EXPERIMENT
	{
    Situation = SrfLanded@Biomes
	}
}

@EXPERIMENT_DEFINITION:HAS[#id[gravityScan]]:NEEDS[FeatureScience]:FOR[zzzKerbalismDefault]
{
	@baseValue = #$@KERBALISM_EXPERIMENT_VALUES/STOCK/gravityScan/value$
	@dataScale = #$@KERBALISM_EXPERIMENT_VALUES/STOCK/gravityScan/size$
	@dataScale /= #$baseValue$
  
  KERBALISM_EXPERIMENT
	{
    Situation = Surface@Biomes
    Situation = InSpaceLow
    Situation = InSpaceHigh
	}
}

@EXPERIMENT_DEFINITION:HAS[#id[atmosphereAnalysis]]:NEEDS[FeatureScience]:FOR[zzzKerbalismDefault]
{
	@baseValue = #$@KERBALISM_EXPERIMENT_VALUES/STOCK/atmosphereAnalysis/value$
	@dataScale = #$@KERBALISM_EXPERIMENT_VALUES/STOCK/atmosphereAnalysis/size$
	@dataScale /= #$baseValue$

  KERBALISM_EXPERIMENT
	{
    SampleMass = 0.002
    Situation = Surface@Biomes
    Situation = FlyingLow@Biomes
    Situation = FlyingHigh
    Situation = InSpaceLow
    BodyAllowed = Atmospheric
	}
}

// note : we use the stock ModuleAsteroid experiment that we patch at runtime, the sample mass
// is defined globally in settings.cfg
@EXPERIMENT_DEFINITION:HAS[#id[asteroidSample]]:NEEDS[FeatureScience]:FOR[zzzKerbalismDefault]
{
	@baseValue = #$@KERBALISM_EXPERIMENT_VALUES/STOCK/asteroidSample/value$
	@dataScale = #$@KERBALISM_EXPERIMENT_VALUES/STOCK/asteroidSample/size$
	@dataScale /= #$baseValue$
}

@EXPERIMENT_DEFINITION:HAS[#id[cometSample_short]]:NEEDS[FeatureScience]:FOR[zzzKerbalismDefault]
{
	@baseValue = #$@KERBALISM_EXPERIMENT_VALUES/STOCK/cometSample_short/value$
	@dataScale = #$@KERBALISM_EXPERIMENT_VALUES/STOCK/cometSample_short/size$
	@dataScale /= #$baseValue$
}

@EXPERIMENT_DEFINITION:HAS[#id[cometSample_intermediate]]:NEEDS[FeatureScience]:FOR[zzzKerbalismDefault]
{
	@baseValue = #$@KERBALISM_EXPERIMENT_VALUES/STOCK/cometSample_intermediate/value$
	@dataScale = #$@KERBALISM_EXPERIMENT_VALUES/STOCK/cometSample_intermediate/size$
	@dataScale /= #$baseValue$
}

@EXPERIMENT_DEFINITION:HAS[#id[cometSample_long]]:NEEDS[FeatureScience]:FOR[zzzKerbalismDefault]
{
	@baseValue = #$@KERBALISM_EXPERIMENT_VALUES/STOCK/cometSample_long/value$
	@dataScale = #$@KERBALISM_EXPERIMENT_VALUES/STOCK/cometSample_long/size$
	@dataScale /= #$baseValue$
}

@EXPERIMENT_DEFINITION:HAS[#id[cometSample_interstellar]]:NEEDS[FeatureScience]:FOR[zzzKerbalismDefault]
{
	@baseValue = #$@KERBALISM_EXPERIMENT_VALUES/STOCK/cometSample_interstellar/value$
	@dataScale = #$@KERBALISM_EXPERIMENT_VALUES/STOCK/cometSample_interstellar/size$
	@dataScale /= #$baseValue$
}

@EXPERIMENT_DEFINITION:HAS[#id[infraredTelescope]]:NEEDS[FeatureScience]:FOR[zzzKerbalismDefault]
{
  @baseValue = #$@KERBALISM_EXPERIMENT_VALUES/STOCK/infraredTelescope/value$
  @dataScale = #$@KERBALISM_EXPERIMENT_VALUES/STOCK/infraredTelescope/size$
  @dataScale /= #$baseValue$

  KERBALISM_EXPERIMENT
  {
    Situation = InSpaceHigh
    BodyAllowed = HomeBody
  }
}

@EXPERIMENT_DEFINITION:HAS[#id[magnetometer]]:NEEDS[FeatureScience]:FOR[zzzKerbalismDefault]
{
	@baseValue = #$@KERBALISM_EXPERIMENT_VALUES/STOCK/magnetometer/value$
	@dataScale = #$@KERBALISM_EXPERIMENT_VALUES/STOCK/magnetometer/size$
	@dataScale /= #$baseValue$

  KERBALISM_EXPERIMENT
  {
    VirtualBiome = NoBiome
    VirtualBiome = InnerBelt
    VirtualBiome = OuterBelt
    VirtualBiome = Magnetosphere
    VirtualBiome = Storm
    // note : not using a single space situation so the DMOS contracts are doable
    Situation = InSpaceLow@VirtualBiomes
    Situation = InSpaceHigh@VirtualBiomes
  }
}


// ============================================================================
// Replacing stock experiments with our own, one by one.
// Affects all parts that use both the stock module AND stock experiments.
// ============================================================================
@PART[*]:HAS[@MODULE:HAS[#experimentID[atmosphereAnalysis]]]:NEEDS[FeatureScience]
{
	MODULE
	{
		name = Experiment
		experiment_id = atmosphereAnalysis
	}
}
@PART[*]:HAS[@MODULE:HAS[#experimentID[mysteryGoo]]]:NEEDS[FeatureScience]
{
	MODULE
	{
		name = Experiment
		experiment_id = mysteryGoo
	}
}
@PART[*]:HAS[@MODULE:HAS[#experimentID[mobileMaterialsLab]]]:NEEDS[FeatureScience]
{
	MODULE
	{
		name = Experiment
		experiment_id = mobileMaterialsLab
	}
}
@PART[*]:HAS[@MODULE:HAS[#experimentID[seismicScan]]]:NEEDS[FeatureScience]
{
	MODULE
	{
		name = Experiment
		experiment_id = seismicScan
	}
}
@PART[*]:HAS[@MODULE:HAS[#experimentID[barometerScan]]]:NEEDS[FeatureScience]
{
	MODULE
	{
		name = Experiment
		experiment_id = barometerScan
	}
}
@PART[*]:HAS[@MODULE:HAS[#experimentID[gravityScan]]]:NEEDS[FeatureScience]
{
	MODULE
	{
		name = Experiment
		experiment_id = gravityScan
	}
}
@PART[*]:HAS[@MODULE:HAS[#experimentID[temperatureScan]]]:NEEDS[FeatureScience]
{
	MODULE
	{
		name = Experiment
		experiment_id = temperatureScan
	}
}
@PART[*]:HAS[@MODULE:HAS[#experimentID[infraredTelescope]]]:NEEDS[FeatureScience]
{
	MODULE
	{
		name = Experiment
		experiment_id = infraredTelescope
	}
}
@PART[kerbalEVA*]:HAS[@MODULE[ModuleTripLogger]]:NEEDS[FeatureScience]
{
	!MODULE:HAS[#experimentID[surfaceSample]]	{}
	!MODULE:HAS[#experimentID[evaReport]]		{}
	MODULE
	{
		name = Experiment
		experiment_id = surfaceSample
	}
	MODULE
	{
		name = Experiment
		experiment_id = evaReport
	}
}
@PART[*]:HAS[@MODULE:HAS[#experimentID[crewReport]]]:NEEDS[FeatureScience]
{
	!MODULE:HAS[#experimentID[crewReport]]	{}
	MODULE
	{
		name = Experiment
		experiment_id = crewReport
	}
}
@PART[*]:HAS[@MODULE:HAS[#experimentID[magnetometer]]]:NEEDS[FeatureScience]
{
	MODULE
	{
		name = Experiment
		experiment_id = magnetometer
	}
}
@PART[*]:HAS[@MODULE:HAS[#experimentID[geigerCounter]]]:NEEDS[FeatureScience]
{
	MODULE
	{
		name = Experiment
		experiment_id = geigerCounter
	}
}

// Replace the stock scanner module with our experiment that reproduce the feature
// Do it late (zzz) in case some MM patch is relying on that module being present (ScanSat ?)
// @PART[*]:HAS[@MODULE[ModuleOrbitalSurveyor]]:NEEDS[FeatureScience]:FOR[zzzKerbalismDefault]
// {
//   !MODULE[ModuleOrbitalSurveyor] {}

//   MODULE
//   {
//     name = Experiment
//     experiment_id = KerbalismResourceScanner
//     experiment_desc = #$@KERBALISM_GROUP_SETTINGS/ORBITAL_EXPERIMENTS/ResourceScanner/desc$
//     data_rate = #$@KERBALISM_GROUP_SETTINGS/ORBITAL_EXPERIMENTS/ResourceScanner/size$
//     @data_rate /= #$@KERBALISM_GROUP_SETTINGS/ORBITAL_EXPERIMENTS/ResourceScanner/duration$
//     ec_rate = #$@KERBALISM_GROUP_SETTINGS/ORBITAL_EXPERIMENTS/ResourceScanner/ECCost$
//     requires = #$@KERBALISM_GROUP_SETTINGS/ORBITAL_EXPERIMENTS/ResourceScanner/requirements$
//     allow_shrouded = false
//   }
// }

// ============================================================================
// Reconfigure stock experiments(avoiding a global nuke to keep people happy)
// strongly recommendeded to not change anything in this section
// Separate from above due to Configure Groups.
// ============================================================================
@PART[*]:HAS[@MODULE[Experiment]]:NEEDS[FeatureScience]:FOR[KerbalismDefault]
{
	@MODULE[Experiment]:HAS[#experiment_id[crewReport]]
	{
		%experiment_description = A brief situation report of dubious relevance and accuracy.
		%ec_rate = #$@KERBALISM_EXPERIMENT_VALUES/STOCK/crewReport/ECCost$
		%crew_operate = True
		%requires = #$@KERBALISM_EXPERIMENT_VALUES/STOCK/crewReport/requirements$
		%data_rate = #$@KERBALISM_EXPERIMENT_VALUES/STOCK/crewReport/size$
		@data_rate /= #$@KERBALISM_EXPERIMENT_VALUES/STOCK/crewReport/duration$
		%resources = #$@KERBALISM_EXPERIMENT_VALUES/STOCK/crewReport/ResourceRates$
	}

	@MODULE[Experiment]:HAS[#experiment_id[surfaceSample]]
	{
		%sample_collecting = True
		%requires = #$@KERBALISM_EXPERIMENT_VALUES/STOCK/surfaceSample/requirements$
		%ec_rate = #$@KERBALISM_EXPERIMENT_VALUES/STOCK/surfaceSample/ECCost$
		%data_rate = #$@KERBALISM_EXPERIMENT_VALUES/STOCK/surfaceSample/size$
		@data_rate /= #$@KERBALISM_EXPERIMENT_VALUES/STOCK/surfaceSample/duration$
		%resources = #$@KERBALISM_EXPERIMENT_VALUES/STOCK/surfaceSample/ResourceRates$
		%hide_when_unavailable = true
	}

	@MODULE[Experiment]:HAS[#experiment_id[evaReport]]
	{
		%ec_rate = #$@KERBALISM_EXPERIMENT_VALUES/STOCK/evaReport/ECCost$
		%data_rate = #$@KERBALISM_EXPERIMENT_VALUES/STOCK/evaReport/size$
		@data_rate /= #$@KERBALISM_EXPERIMENT_VALUES/STOCK/evaReport/duration$
		%requires = #$@KERBALISM_EXPERIMENT_VALUES/STOCK/evaReport/requirements$
		%resources = #$@KERBALISM_EXPERIMENT_VALUES/STOCK/evaReport/ResourceRates$
		%crew_operate = True
	}

	@MODULE[Experiment]:HAS[#experiment_id[mysteryGoo]]
	{
		%sample_amount = #$@KERBALISM_EXPERIMENT_VALUES/STOCK/mysteryGoo/samples$
		%requires = #$@KERBALISM_EXPERIMENT_VALUES/STOCK/mysteryGoo/requirements$
		%ec_rate = #$@KERBALISM_EXPERIMENT_VALUES/STOCK/mysteryGoo/ECCost$
		%data_rate = #$@KERBALISM_EXPERIMENT_VALUES/STOCK/mysteryGoo/size$
		@data_rate /= #$@KERBALISM_EXPERIMENT_VALUES/STOCK/mysteryGoo/duration$
		%resources = #$@KERBALISM_EXPERIMENT_VALUES/STOCK/mysteryGoo/ResourceRates$
	}

	@MODULE[Experiment]:HAS[#experiment_id[mobileMaterialsLab]]
	{
		%sample_amount = #$@KERBALISM_EXPERIMENT_VALUES/STOCK/mobileMaterialsLab/samples$
		%requires = #$@KERBALISM_EXPERIMENT_VALUES/STOCK/mobileMaterialsLab/requirements$
		%ec_rate = #$@KERBALISM_EXPERIMENT_VALUES/STOCK/mobileMaterialsLab/ECCost$
		%data_rate = #$@KERBALISM_EXPERIMENT_VALUES/STOCK/mobileMaterialsLab/size$
		@data_rate /= #$@KERBALISM_EXPERIMENT_VALUES/STOCK/mobileMaterialsLab/duration$
		%resources = #$@KERBALISM_EXPERIMENT_VALUES/STOCK/mobileMaterialsLab/ResourceRates$
	}

	@MODULE[Experiment]:HAS[#experiment_id[temperatureScan]]
	{
		%ec_rate = #$@KERBALISM_EXPERIMENT_VALUES/STOCK/temperatureScan/ECCost$
		%data_rate = #$@KERBALISM_EXPERIMENT_VALUES/STOCK/temperatureScan/size$
		@data_rate /= #$@KERBALISM_EXPERIMENT_VALUES/STOCK/temperatureScan/duration$
		%requires = #$@KERBALISM_EXPERIMENT_VALUES/STOCK/temperatureScan/requirements$
		%resources = #$@KERBALISM_EXPERIMENT_VALUES/STOCK/temperatureScan/ResourceRates$
	}

	@MODULE[Experiment]:HAS[#experiment_id[barometerScan]]
	{
		%ec_rate = #$@KERBALISM_EXPERIMENT_VALUES/STOCK/barometerScan/ECCost$
		%data_rate = #$@KERBALISM_EXPERIMENT_VALUES/STOCK/barometerScan/size$
		@data_rate /= #$@KERBALISM_EXPERIMENT_VALUES/STOCK/barometerScan/duration$
		%requires = #$@KERBALISM_EXPERIMENT_VALUES/STOCK/barometerScan/requirements$
		%resources = #$@KERBALISM_EXPERIMENT_VALUES/STOCK/barometerScan/ResourceRates$
		%allow_shrouded = False
	}

	@MODULE[Experiment]:HAS[#experiment_id[seismicScan]]
	{
		%requires = Surface
		%ec_rate = #$@KERBALISM_EXPERIMENT_VALUES/STOCK/seismicScan/ECCost$
		%data_rate = #$@KERBALISM_EXPERIMENT_VALUES/STOCK/seismicScan/size$
		@data_rate /= #$@KERBALISM_EXPERIMENT_VALUES/STOCK/seismicScan/duration$
		%requires = #$@KERBALISM_EXPERIMENT_VALUES/STOCK/seismicScan/requirements$
		%resources = #$@KERBALISM_EXPERIMENT_VALUES/STOCK/seismicScan/ResourceRates$
	}

	@MODULE[Experiment]:HAS[#experiment_id[gravityScan]]
	{
		%requires = #$@KERBALISM_EXPERIMENT_VALUES/STOCK/gravityScan/requirements$
		%ec_rate = #$@KERBALISM_EXPERIMENT_VALUES/STOCK/gravityScan/ECCost$
		%data_rate = #$@KERBALISM_EXPERIMENT_VALUES/STOCK/gravityScan/size$
		@data_rate /= #$@KERBALISM_EXPERIMENT_VALUES/STOCK/gravityScan/duration$
		%resources = #$@KERBALISM_EXPERIMENT_VALUES/STOCK/gravityScan/ResourceRates$
	}

	@MODULE[Experiment]:HAS[#experiment_id[atmosphereAnalysis]]
	{
		%requires = #$@KERBALISM_EXPERIMENT_VALUES/STOCK/atmosphereAnalysis/requirements$
		%sample_collecting = True
		%ec_rate = #$@KERBALISM_EXPERIMENT_VALUES/STOCK/atmosphereAnalysis/ECCost$
		%data_rate = #$@KERBALISM_EXPERIMENT_VALUES/STOCK/atmosphereAnalysis/size$
		@data_rate /= #$@KERBALISM_EXPERIMENT_VALUES/STOCK/atmosphereAnalysis/duration$
		%resources = #$@KERBALISM_EXPERIMENT_VALUES/STOCK/atmosphereAnalysis/ResourceRates$
		%allow_shrouded = False
	}

	@MODULE[Experiment]:HAS[#experiment_id[infraredTelescope]]
	{
		%ec_rate = #$@KERBALISM_EXPERIMENT_VALUES/STOCK/infraredTelescope/ECCost$
		%data_rate = #$@KERBALISM_EXPERIMENT_VALUES/STOCK/infraredTelescope/size$
		@data_rate /= #$@KERBALISM_EXPERIMENT_VALUES/STOCK/infraredTelescope/duration$
		%requires = #$@KERBALISM_EXPERIMENT_VALUES/STOCK/infraredTelescope/requirements$
		%resources = #$@KERBALISM_EXPERIMENT_VALUES/STOCK/infraredTelescope/ResourceRates$
	}

  @MODULE[Experiment]:HAS[#experiment_id[magnetometer]]
  {
    %ec_rate = #$@KERBALISM_EXPERIMENT_VALUES/STOCK/magnetometer/ECCost$
		%data_rate = #$@KERBALISM_EXPERIMENT_VALUES/STOCK/magnetometer/size$
		@data_rate /= #$@KERBALISM_EXPERIMENT_VALUES/STOCK/magnetometer/duration$
  }

	@MODULE[Experiment]:HAS[#experiment_id[geigerCounter]]
	{
		%ec_rate = #$@KERBALISM_GROUP_SETTINGS/UNMANNED_EXPERIMENTS/GeigerCounter/ECCost$
		%data_rate = #$@KERBALISM_GROUP_SETTINGS/UNMANNED_EXPERIMENTS/GeigerCounter/size$
		@data_rate /= #$@KERBALISM_GROUP_SETTINGS/UNMANNED_EXPERIMENTS/GeigerCounter/duration$
		%requires = #$@KERBALISM_GROUP_SETTINGS/UNMANNED_EXPERIMENTS/GeigerCounter/requirements$
		%resources = #$@KERBALISM_GROUP_SETTINGS/UNMANNED_EXPERIMENTS/GeigerCounter/ResourceRates$
	}
}

@PART[*]:HAS[@MODULE[*ModuleScienceAnimate*]:HAS[#experimentID[mysteryGoo]]]:FOR[KerbalismDefault]:NEEDS[FeatureScience] {
  @MODULE[Experiment]:HAS[#experiment_id[mysteryGoo]&~anim_deploy[*]&~anim_loop[*]] {
    &anim_deploy = #$../MODULE[*ModuleScienceAnimate*]:HAS[#experimentID[mysteryGoo]]/animationName$
  }
}

@PART[*]:HAS[@MODULE[*ModuleScience*]:HAS[#experimentID[mysteryGoo]]]:FOR[KerbalismDefault]:NEEDS[FeatureScience] {
  !MODULE[*ModuleScience*]:HAS[#experimentID[mysteryGoo]] {}
}

@PART[*]:HAS[@MODULE[*ModuleScienceAnimate*]:HAS[#experimentID[mobileMaterialsLab]]]:FOR[KerbalismDefault]:NEEDS[FeatureScience] {
  @MODULE[Experiment]:HAS[#experiment_id[mobileMaterialsLab]&~anim_deploy[*]&~anim_loop[*]] {
    &anim_deploy = #$../MODULE[*ModuleScienceAnimate*]:HAS[#experimentID[mobileMaterialsLab]]/animationName$
  }
}

@PART[*]:HAS[@MODULE[*ModuleScience*]:HAS[#experimentID[mobileMaterialsLab]]]:FOR[KerbalismDefault]:NEEDS[FeatureScience] {
  !MODULE[*ModuleScience*]:HAS[#experimentID[mobileMaterialsLab]] {}
}

@PART[*]:HAS[@MODULE[*ModuleScienceAnimate*]:HAS[#experimentID[temperatureScan]]]:FOR[KerbalismDefault]:NEEDS[FeatureScience] {
  @MODULE[Experiment]:HAS[#experiment_id[temperatureScan]&~anim_deploy[*]&~anim_loop[*]] {
    &anim_deploy = #$../MODULE[*ModuleScienceAnimate*]:HAS[#experimentID[temperatureScan]]/animationName$
  }
}

@PART[*]:HAS[@MODULE[*ModuleScience*]:HAS[#experimentID[temperatureScan]]]:FOR[KerbalismDefault]:NEEDS[FeatureScience] {
  !MODULE[*ModuleScience*]:HAS[#experimentID[temperatureScan]] {}
}

@PART[*]:HAS[@MODULE[*ModuleScienceAnimate*]:HAS[#experimentID[barometerScan]]]:FOR[KerbalismDefault]:NEEDS[FeatureScience] {
  @MODULE[Experiment]:HAS[#experiment_id[barometerScan]&~anim_deploy[*]&~anim_loop[*]] {
    &anim_deploy = #$../MODULE[*ModuleScienceAnimate*]:HAS[#experimentID[barometerScan]]/animationName$
  }
}

@PART[*]:HAS[@MODULE[*ModuleScience*]:HAS[#experimentID[barometerScan]]]:FOR[KerbalismDefault]:NEEDS[FeatureScience] {
  !MODULE[*ModuleScience*]:HAS[#experimentID[barometerScan]] {}
}

@PART[*]:HAS[@MODULE[*ModuleScienceAnimate*]:HAS[#experimentID[seismicScan]]]:FOR[KerbalismDefault]:NEEDS[FeatureScience] {
  @MODULE[Experiment]:HAS[#experiment_id[seismicScan]&~anim_deploy[*]&~anim_loop[*]] {
    &anim_deploy = #$../MODULE[*ModuleScienceAnimate*]:HAS[#experimentID[seismicScan]]/animationName$
  }
}

@PART[*]:HAS[@MODULE[*ModuleScience*]:HAS[#experimentID[seismicScan]]]:FOR[KerbalismDefault]:NEEDS[FeatureScience] {
  !MODULE[*ModuleScience*]:HAS[#experimentID[seismicScan]] {}
}

@PART[*]:HAS[@MODULE[*ModuleScienceAnimate*]:HAS[#experimentID[gravityScan]]]:FOR[KerbalismDefault]:NEEDS[FeatureScience] {
  @MODULE[Experiment]:HAS[#experiment_id[gravityScan]&~anim_deploy[*]&~anim_loop[*]] {
    &anim_deploy = #$../MODULE[*ModuleScienceAnimate*]:HAS[#experimentID[gravityScan]]/animationName$
  }
}

@PART[*]:HAS[@MODULE[*ModuleScience*]:HAS[#experimentID[gravityScan]]]:FOR[KerbalismDefault]:NEEDS[FeatureScience] {
  !MODULE[*ModuleScience*]:HAS[#experimentID[gravityScan]] {}
}

@PART[*]:HAS[@MODULE[*ModuleScienceAnimate*]:HAS[#experimentID[atmosphereAnalysis]]]:FOR[KerbalismDefault]:NEEDS[FeatureScience] {
  @MODULE[Experiment]:HAS[#experiment_id[atmosphereAnalysis]&~anim_deploy[*]&~anim_loop[*]] {
    &anim_deploy = #$../MODULE[*ModuleScienceAnimate*]:HAS[#experimentID[atmosphereAnalysis]]/animationName$
  }
}

@PART[*]:HAS[@MODULE[*ModuleScience*]:HAS[#experimentID[atmosphereAnalysis]]]:FOR[KerbalismDefault]:NEEDS[FeatureScience] {
  !MODULE[*ModuleScience*]:HAS[#experimentID[atmosphereAnalysis]] {}
}

@PART[*]:HAS[@MODULE[*ModuleScienceAnimate*]:HAS[#experimentID[infraredTelescope]]]:FOR[KerbalismDefault]:NEEDS[FeatureScience] {
  @MODULE[Experiment]:HAS[#experiment_id[infraredTelescope]&~anim_deploy[*]&~anim_loop[*]] {
    &anim_deploy = #$../MODULE[*ModuleScienceAnimate*]:HAS[#experimentID[infraredTelescope]]/animationName$
  }
}

@PART[*]:HAS[@MODULE[*ModuleScience*]:HAS[#experimentID[infraredTelescope]]]:FOR[KerbalismDefault]:NEEDS[FeatureScience] {
  !MODULE[*ModuleScience*]:HAS[#experimentID[infraredTelescope]] {}
}

@PART[*]:HAS[@MODULE[*ModuleScienceAnimate*]:HAS[#experimentID[magnetometer]]]:FOR[KerbalismDefault]:NEEDS[FeatureScience] {
  @MODULE[Experiment]:HAS[#experiment_id[magnetometer]&~anim_deploy[*]&~anim_loop[*]] {
    &anim_deploy = #$../MODULE[*ModuleScienceAnimate*]:HAS[#experimentID[magnetometer]]/animationName$
  }
}

@PART[*]:HAS[@MODULE[*ModuleScience*]:HAS[#experimentID[magnetometer]]]:FOR[KerbalismDefault]:NEEDS[FeatureScience] {
  !MODULE[*ModuleScience*]:HAS[#experimentID[magnetometer]] {}
}

@PART[*]:HAS[@MODULE[*ModuleScienceAnimate*]:HAS[#experimentID[geigerCounter]]]:FOR[KerbalismDefault]:NEEDS[FeatureScience] {
  @MODULE[Experiment]:HAS[#experiment_id[geigerCounter]&~anim_deploy[*]&~anim_loop[*]] {
    &anim_deploy = #$../MODULE[*ModuleScienceAnimate*]:HAS[#experimentID[geigerCounter]]/animationName$
  }
}

@PART[*]:HAS[@MODULE[*ModuleScience*]:HAS[#experimentID[geigerCounter]]]:FOR[KerbalismDefault]:NEEDS[FeatureScience] {
  !MODULE[*ModuleScience*]:HAS[#experimentID[geigerCounter]] {}
}

// ============================================================================
// Sample reservoir upgrades
// ============================================================================

//Goo
@PART[*]:HAS[@MODULE[Experiment]:HAS[#experiment_id[mysteryGoo]],!MODULE[Configure]:HAS[#title[Laboratory?Experiments]]]:NEEDS[FeatureScience]:FOR[zzzKerbalismDefault]
{
	@MODULE[Experiment]:HAS[#experiment_id[mysteryGoo]]
	{
		UPGRADES
		{
			UPGRADE
			{
				name__ = Goo-Storage-Upgrade
				techRequired__ = #$../../../@KERBALISM_HDD_SIZES/PRIVATE_DRIVES/MysteryGoo/UpgradeTech$
				sample_amount = #$../../#sample_amount$
				@sample_amount *= #$../../../@KERBALISM_HDD_SIZES/PRIVATE_DRIVES/MysteryGoo/SampleReservoirUpgrade$
			}
		}
	}
}

//Materials Bay
@PART[*]:HAS[@MODULE[Experiment]:HAS[#experiment_id[mobileMaterialsLab]],!MODULE[Configure]:HAS[#title[Laboratory?Experiments]]]:NEEDS[FeatureScience]:FOR[zzzKerbalismDefault]
{
	@MODULE[Experiment]:HAS[#experiment_id[mobileMaterialsLab]]
	{
		UPGRADES
		{
			UPGRADE
			{
				name__ = MatBay-Storage-Upgrade
				techRequired__ = #$../../../@KERBALISM_HDD_SIZES/PRIVATE_DRIVES/MaterialsBay/UpgradeTech$
				sample_amount = #$../../#sample_amount$
				@sample_amount *= #$../../../@KERBALISM_HDD_SIZES/PRIVATE_DRIVES/MaterialsBay/SampleReservoirUpgrade$
			}
		}
	}
}
// ============================================================================
// Animation fix for goo container & materials bay
// ============================================================================
@PART[GooExperiment,science_module,Magnetometer]:NEEDS[FeatureScience]:AFTER[KerbalismDefault]
{
	!MODULE[ModuleAnimateGeneric] {}
  	!MODULE[ModuleDeployablePart] {}
	@MODULE[Experiment]
	{
		%anim_deploy = Deploy
	}
}
// ============================================================================
// Nerfing EC cost for EVA kerbals for surface sample, otherwise it's unuseable
// Done this way because of groups that include the surface sample.
// ============================================================================
@PART[kerbalEVA*]:HAS[@MODULE[ModuleTripLogger]]:NEEDS[FeatureScience]:AFTER[KerbalismDefault]
{
	@MODULE[Experiment]:HAS[#experiment_id[surfaceSample]]
	{
		@ec_rate /= #$@KERBALISM_EXPERIMENT_VALUES/STOCK/surfaceSample/EVAMultiplier$
		@requires = #$@KERBALISM_EXPERIMENT_VALUES/STOCK/surfaceSample/EVArequirements$
	}
}

// ============================================================================
// Remove scientist bonus
// ============================================================================

@EXPERIENCE_TRAIT[Scientist]:NEEDS[FeatureScience]
{
	@desc = Scientists can reset experiments.
	@EFFECT[VesselScienceReturn] { @modifiers = 1, 1, 1, 1, 1 }
	@EFFECT[PartScienceReturn]   { @modifiers = 1, 1, 1, 1, 1 }
}

// ============================================================================
// Lab module satisfies stock contracts
// ============================================================================

@Contracts:NEEDS[FeatureScience]
{
	@Base
	{
		@PART_REQUEST:HAS[#Module[ModuleScienceLab]] { @Module = Laboratory }
	}
	@Station
	{
		@PART_REQUEST:HAS[#Module[ModuleScienceLab]] { @Module = Laboratory }
	}
}

// ============================================================================
// Replace stock lab with our own
// Labs are special snowflakes: they sample data twice as fast at 5 times the EC
// cost and bypass the need for experiment resets, but they require a scientist
// present at all times to operate. Scientist level configured below.
// Only affects the Laboratory Experiments Group.
// Also triples sample reservoir, for good measure.
// Labs get a selection of exclusive experiments + the ability to run Goo & MatBay
// ============================================================================
// @PART[*]:HAS[@MODULE[ModuleScienceLab]]:NEEDS[FeatureScience]
// {
// 	!MODULE[ModuleScienceLab] {}
// 	!MODULE[ModuleScienceConverter] {}

// 	MODULE
// 	{
// 		name = Laboratory
// 		researcher = Scientist
// 		analysis_rate = 0.005 // 5 kbps
// 		ec_rate = 1.0
// 	}
// }
// @PART[*]:HAS[@MODULE[ModuleScienceLab]]:NEEDS[FeatureScience]:FIRST // DangerNoodle; changed from PART[Large_Crewed_Lab] to PART[*] for easy mod support
// {
// 	MODULE
// 	{
// 		name = Configure
// 		title = Laboratory Experiments
// 	}
// }

// @PART[*]:HAS[@MODULE[Configure]:HAS[#title[Laboratory?Experiments]]]:NEEDS[FeatureScience]:FOR[zzzKerbalismDefault]
// {
// 	// Following #775, this doesn't make any sense to me since lab experiments are only on labs, 
// 	// why mass-patch their defined stats here ? Leaving as is because I'm lazy and I don't care.
// 	@MODULE[Experiment],*
// 	{
// 		@data_rate *= #$@KERBALISM_GROUP_SETTINGS/LAB_EXPERIMENTS/LabDataRateMultiplier$
// 		@ec_rate *= #$@KERBALISM_GROUP_SETTINGS/LAB_EXPERIMENTS/LabECMultiplier$
// 		// removed, see issue #775, don't override lab experiments crew reqs
// 		// %crew_operate = Scientist  
// 		!crew_reset = del
// 	}

// 	//per experiment tweaks, also boosts sample reservoirs where appropriate
// 	@MODULE[Experiment]:HAS[#experiment_id[mysteryGoo]]
//   {
//     %crew_operate = #$@KERBALISM_GROUP_SETTINGS/LAB_EXPERIMENTS/mysteryGoo/CrewRequirement$
//     @sample_amount *= #$@KERBALISM_GROUP_SETTINGS/LAB_EXPERIMENTS/LabSampleReservoirMultiplier$
// 		@UPGRADES
//      {
//       @UPGRADE
//       {
//         @sample_amount = #$../../#sample_amount$
// 				@sample_amount *= #$../../../@KERBALISM_HDD_SIZES/STOCK/PRIVATE_DRIVES/MysteryGoo/SampleReservoirUpgrade$
//       }
//     }
//   }
// 	@MODULE[Experiment]:HAS[#experiment_id[mobileMaterialsLab]]
//   {
//     %crew_operate = #$@KERBALISM_GROUP_SETTINGS/LAB_EXPERIMENTS/mobileMaterialsLab/CrewRequirement$
// 		@sample_amount *= #$@KERBALISM_GROUP_SETTINGS/LAB_EXPERIMENTS/LabSampleReservoirMultiplier$
// 		@UPGRADES
//     {
//       @UPGRADE
//       {
//         @sample_amount = #$../../#sample_amount$
// 				@sample_amount *= #$../../../@KERBALISM_HDD_SIZES/STOCK/PRIVATE_DRIVES/MaterialsBay/SampleReservoirUpgrade$
//       }
//     }
//   }
// }

// ======================================================================
// adds sensors to gravioli/radiation/temperature/pressure to all parts that use
// the stock experiments and do not already have one.
// ============================================================================

@PART[*]:HAS[!MODULE[Sensor]:HAS[#type[radiation]],@MODULE[Experiment]:HAS[#experiment_id[geigerCounter]]]:NEEDS[FeatureScience]:FOR[zzzKerbalismDefault]
{
	!MODULE[ModuleEnviroSensor] {}
	MODULE
	{
		name = Sensor
		type = radiation
	}
}
@PART[*]:HAS[!MODULE[Sensor]:HAS[#type[gravioli]],@MODULE[Experiment]:HAS[#experiment_id[gravityScan]]]:NEEDS[FeatureScience]:FOR[zzzKerbalismDefault]
{
	!MODULE[ModuleEnviroSensor] {}
	MODULE
	{
		name = Sensor
		type = gravioli
	}
}
@PART[*]:HAS[!MODULE[Sensor]:HAS[#type[temperature]],@MODULE[Experiment]:HAS[#experiment_id[temperatureScan]]]:NEEDS[FeatureScience]:FOR[zzzKerbalismDefault]
{
	!MODULE[ModuleEnviroSensor] {}
	MODULE
	{
		name = Sensor
		type = temperature
	}
}
@PART[*]:HAS[!MODULE[Sensor]:HAS[#type[pressure]],@MODULE[Experiment]:HAS[#experiment_id[barometerScan]]]:NEEDS[FeatureScience]:FOR[zzzKerbalismDefault]
{
	!MODULE[ModuleEnviroSensor] {}
	MODULE
	{
		name = Sensor
		type = pressure
	}
}
