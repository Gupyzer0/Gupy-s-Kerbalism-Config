// =================================================================================
// Spacelines Kerbalism Config.
// Based on Skyhawk Kerbalism & ROKerbalism
// =================================================================================

Profile
{
	name = Default

	// ==============================================================================
	// SUPPLIES
	// ==============================================================================

	Supply
	{
		resource = ElectricCharge
		on_eva = 1260.0 //temporary 350Wh based on the 279/360Wh batteries in the apollo PLSS
		low_message = #KERBALISM_low_battery //$VESSEL batteries are getting low@<i>We must shut down non-essential systems</i>
		empty_message = #KERBALISM_empty_battery //$VESSEL has run out of ElectricCharge@<i>Life support systems are off</i>|$VESSEL is out of ElectricCharge@<i>We no longer have control</i>
		refill_message = #KERBALISM_refill_battery //$VESSEL batteries have been recharged@<i>All systems are back online</i>
	}
	Supply
	{
		resource = Food
		low_message = #KERBALISM_low_food //Food reserves are getting low on $VESSEL@<i>All edible items are being rationed</i>
		empty_message = #KERBALISM_empty_food //There is no more food on $VESSEL@<i>The crew prepares for the worst</i>
		refill_message = #KERBALISM_refill_food //$VESSEL food reserves restored@<i>Rations have returned to normal amounts</i>
	}
	Supply
	{
		resource = Water
		on_eva = 6.5 // more than enough for an 8h EVA
		low_message = #KERBALISM_low_water //Water reserves are getting low on $VESSEL@<i>Bathing has been suspended</i>
		empty_message = #KERBALISM_empty_water //$VESSEL is completely out of water@<i>We are in a state of emergency</i>
		refill_message = #KERBALISM_refill_water //$VESSEL has restocked water reserves@<i>Regular bathing schedules can resume</i>
	}
	Supply
	{
		resource = Oxygen
		on_eva = 195 // 8 hours
		low_message = #KERBALISM_low_oxygen //Oxygen reserves are dangerously low on $VESSEL@<i>Something must be done immediately</i>
		empty_message = #KERBALISM_empty_oxygen //$VESSEL has run out of Oxygen@<i>It is only a matter of time for the crew</i>
		refill_message = #KERBALISM_refill_oxygen //$VESSEL Oxygen reserves refilled@<i>Everyone is breathing easier</i>
	}
	Supply
	{
		resource = Nitrogen
		low_message = #KERBALISM_low_nitrogen //Nitrogen reserves are low on $VESSEL@<i>Please send a resupply mission</i>
		empty_message = #KERBALISM_empty_nitrogen //$VESSEL is out of Nitrogen@<i>The crew should consider getting in their suits</i>
		refill_message = #KERBALISM_refill_nitrogen //$VESSEL Nitrogen reserves refilled@<i>Normal operations can resume</i>
	}
	Supply
	{
		resource = LithiumHydroxide
		low_message = #KERBALISM_low_lithium_hydroxide //Lithium Hydroxide reserves are low on $VESSEL@<i>Please send a resupply mission</i>
		empty_message = #KERBALISM_empty_lithium_hydroxide //$VESSEL is out of Lithium Hydroxide@<i>We can no longer scrub CO2</i>
		refill_message = #KERBALISM_refill_lithium_hydroxide //$VESSEL Lithium Hydroxide reserves refilled@<i>Normal operations can resume</i>
	}
	Supply
	{
		resource = PotassiumSuperoxide
		low_message = #KERBALISM_low_potassium_superoxide //Potassium Superoxide reserves are low on $VESSEL@<i>Please send a resupply mission</i>
		empty_message = #KERBALISM_empty_potassium_superoxide //$VESSEL is out of Potassium Superoxide@<i>O2 can no longer be generated and CO2 is soon going to build up</i>
		refill_message = #KERBALISM_refill_potassium_superoxide //$VESSEL Potassium Superoxide reserves refilled@<i>Normal operations can resume</i>
	}
	Supply
	{
		resource = LqdHydrogen
		low_message = #KERBALISM_low_lqd_hydrogen //$VESSEL Liquid Hydrogen reserves are low
		empty_message = #KERBALISM_empty_lqd_hydrogen //$VESSEL Liquid Hydrogen tanks are empty
		refill_message = #KERBALISM_refill_lqd_hydrogen //$VESSEL has refilled the Liquid Hydrogen tanks
	}
	Supply
	{
		resource = LqdOxygen
		low_message = #KERBALISM_low_lqd_oxygen //$VESSEL Liquid Oxygen reserves are low
		empty_message = #KERBALISM_empty_lqd_oxygen //$VESSEL Liquid Oxygen tanks are empty
		refill_message = #KERBALISM_refill_lqd_oxygen //$VESSEL has refilled the Liquid Oxygen tanks
	}
	Supply
	{
		resource = Hydrogen
		low_message = #KERBALISM_low_hydrogen //$VESSEL Hydrogen reserves are low
		empty_message = #KERBALISM_empty_hydrogen //$VESSEL Hydrogen tanks are empty
		refill_message = #KERBALISM_refill_hydrogen //$VESSEL has refilled the Hydrogen tanks
	}
	Supply
	{
		resource = Aerozine50
		low_message = Aerozine tanks are almost empty on $VESSEL
		empty_message = There is no more Aerozine in $VESSEL's tanks.@<i>It doesn't boil off, so what the heck happened to it?</i>
		refill_message = $VESSEL's Aerozine tanks have been refilled
	}

	Supply
	{
		resource = NTO
		low_message = NTO tanks are almost empty on $VESSEL
		empty_message = There is no more NTO in $VESSEL's tanks.@<i>It doesn't boil off, so what the heck happened to it?</i>
		refill_message = $VESSEL's NTO tanks have been refilled
	}

	Supply
	{
		resource = LqdMethane
		low_message = $VESSEL Liquid Methane reserves are low
		empty_message = $VESSEL Liquid Methane tanks are empty
		refill_message = $VESSEL has refilled the Liquid Methane tanks
	}

	// ==============================================================================
	// RULES
	// ==============================================================================

	Rule
	{
		name = climatization
		input = ElectricCharge
		rate = 0.0001 // per-kelvin (temp diff), per m^3 (living space), per-second
		degeneration = 0.00000007 // about 2h at 100k temp diff in 20m^3 - FIXME default kerbalism value, needs testing
		modifier = temperature,volume,per_capita
		warning_message = #KERBALISM_climatization_warning //$ON_VESSEL$KERBAL feels cold|$ON_VESSEL$KERBAL is sweating
		danger_message = #KERBALISM_climatization_danger //$ON_VESSEL$KERBAL is freezing|$ON_VESSEL$KERBAL is burning alive
		fatal_message = #KERBALISM_climatization_fatal //$ON_VESSEL$KERBAL froze to death|$ON_VESSEL$KERBAL was burned alive
		relax_message = #KERBALISM_climatization_relax //$ON_VESSEL$KERBAL hypothermia is under control|$ON_VESSEL$KERBAL is cooling down
	}

	Rule // 1 per day
	{
		name = eating
		title = #KERBALISM_RuleName_eating
		input = Food
		output = Waste
		rate = 0.5
		interval = 21600  // 2 meals per day - this value will vary based on day length
		individuality = 0.01
		degeneration = 0.03333333333 // 30 meals, or 15 days
		warning_message = #KERBALISM_food_warning
		danger_message = #KERBALISM_food_danger
		fatal_message = #KERBALISM_food_fatal
		relax_message = #KERBALISM_food_relax
	}

	Rule // 2 per day
	{
		name = drinking
		title = #KERBALISM_RuleName_drinking
		input = Water
		output = WasteWater
		rate = 0.5
		interval = 10800 // 4 drinks per day - this value will vary based on day length
		degeneration = 0.041665 // 12 drinks, or 3 days
		individuality = 0.01
		warning_message = #KERBALISM_water_warning
		danger_message = #KERBALISM_water_danger
		fatal_message = #KERBALISM_water_fatal
		relax_message = #KERBALISM_water_relax
	}

	Rule // 37 O2 per day
	{
		name = breathing
		title = #KERBALISM_RuleName_breathing
		input = Oxygen
		output = WasteAtmosphere
		rate = 0.00083333333 // Based on ISS figures of 0.84Kg/day. Kerbals use 1/16 of an astronauts use giving figures of 0.0525Kg/day. I modified it to a slightly lower value, so that six units of  oxygen are used per hour in stock KSP, or 36 units total per day - this value will vary based on day length
		degeneration = 0.0055555 // 3 minutes
		modifier = non_breathable
		individuality = 0.01
		warning_message = #KERBALISM_oxygen_warning
		danger_message = #KERBALISM_oxygen_danger
		fatal_message = #KERBALISM_oxygen_fatal
		relax_message = #KERBALISM_oxygen_relax
	}

	Rule
	{
		name = co2 poisoning
		degeneration = 0.000555556 // 30 minutes
		modifier = poisoning
		warning_threshold = 0.01
		danger_threshold = 0.5
		warning_message = #KERBALISM_co2_warning //$VESSEL's CO2 levels are starting to rise
		danger_message = #KERBALISM_co2_danger //$ON_VESSEL$KERBAL is having trouble breathing
		fatal_message = #KERBALISM_co2_fatal //$ON_VESSEL$KERBAL has died of CO2 poisoning
		relax_message = #KERBALISM_co2_relax //$ON_VESSEL$KERBAL is breathing normally again
	}

	Rule
	{
		name = stress
		degeneration = 0.000000008 // 3.96 years
		variance = 0.1
		modifier = living_space,comfort,pressure
		breakdown = true // trigger breakdown event instead of death
		warning_message = #KERBALISM_stress_warning //$ON_VESSEL$KERBAL is losing their mind@<i>Concentration is becoming a problem</i>
		danger_message = #KERBALISM_stress_danger //$ON_VESSEL$KERBAL is about to breakdown@<i>The stress is too much</i>
		relax_message = #KERBALISM_stress_relax //$ON_VESSEL$KERBAL is thinking straight now@<i>The stress level has reduced</i>
	}

	Rule
	{
		name = radiation
		title = #KERBALISM_RuleName_radiation
		degeneration = 0.5 // just use the modifier
		variance = 0.1 // add per-kerbal variance
		individuality = 0.15
		lifetime = true // this is a life time value
		modifier = radiation,shielding
		warning_threshold = 25.0
		danger_threshold = 37.5
		fatal_threshold = 50.0
		warning_message = #KERBALISM_radiation_warning
		danger_message = #KERBALISM_radiation_danger
		fatal_message = #KERBALISM_radiation_fatal
		relax_message = #KERBALISM_radiation_relax
	}

	// ========================================================================
	// PROCESSES
	// ========================================================================

	// ========================================================================
	// Scrubbers
	// ========================================================================

	// Basic LIOH Scrubber
	// convention: 1 capacity = enough to scrub output of 1 crew member for 1 day
	
	//Short-term scrubber for Mercury type missions - lasts about 7 days (enough for early low orbit ops - technically you could make it to the mun/moon and back, but it'll be VERY tight so it's a big risk)
	Process 
	{
		name = basicLiOHScrubber
		title = Basic LiOH Scrubber
		modifier = _BasicLiOHScrubber
		input = ElectricCharge@0.1
		input = WasteAtmosphere@0.000625 //Standard unit - equivalent to the amount of CO2 produced by one crew member every second, but rounded up slightly to allow for some variability
		input = LithiumHydroxide@0.00000330687  //Convention will be that 1 unit of LiOH is consumed every 7 days
	}

	// Advanced LIOH Scrubber
	//Long-term scrubber for Apollo type missions - lasts about 28 days (enough to easily do mun and back, and 	maybe barely make it back from Minmus)
	Process 
	{
		name = advancedLiOHScrubber
		title = Advanced LiOH Scrubber
		modifier = _AdvancedLiOHScrubber
		input = ElectricCharge@0.1
		input = WasteAtmosphere@0.000625
		// efficiency starts at 2 (2 x a pods scrubber), reaches 1 in 6h, then drops below
		input = LithiumHydroxide@0.00000330687 //1 unit consumed per 7 days, so 4 should be carried in total per crew member   
	}

	// Basic Regenerative Scrubber
	// An early regenerative scrubber that can handle half the capacity of a crew member infinetly, so it's useful for early stations, but not for small capsule-based missions
	Process
	{
		name = basicRegenerativeScrubber
		title = Basic Regenerative Scrubber
		modifier = _BasicRegenerativeScrubber
		input = ElectricCharge@0.025
		input = WasteAtmosphere@0.0003125
		output = CarbonDioxide@0.0003125
		dump = true
	}

	// Advanced Regenerative Scrubber
	// Advanced regenerative scrubber - can handle full crew capacity, making it the most effective late game version
	Process
	{
		name = advancedRegenerativeScrubber
		title = Advanced Regenerative Scrubber
		modifier = _AdvancedRegenerativeScrubber
		input = ElectricCharge@0.025
		input = WasteAtmosphere@0.000625
		output = CarbonDioxide@0.000625
		dump = true
	}

	// EVA Scrubber
	Process
	{
		name = eva scrubber
		modifier = _EVAScrubber
		input = ElectricCharge@0.020
		input = WasteAtmosphere@0.0099  			// efficiency starts at 2 (2 x a pods scrubber), reaches 1 in 8h, then drops below
		input = _EVAScrubber@0.0000347
	}
	
	// Water Sublimator
	// Water sublimator for heat removal, currently half-useless since kerbals won't die when it runs out
	// Used to add EC consumption and water tanks to EVA - based on the Apollo PLSS
	Process
	{
		name = water sublimator
		modifier = _WaterSublimator
		input = ElectricCharge@0.020    			// 45 watts (total with the scrubber) deducted from the Apollo PLSS battery load, rest is automatically added by the climatization rule
		input = Water@0.0001554    					//consumes around 0.56kg of water in 1h
	}

	// ========================================================================
	// Pressurization
	// ========================================================================

	// O2 Pressure Control
	// convention: 1 capacity = enough to compensate for leaks in 70 m^2 surface (a cube of 40 m^3 volume)
	Process
	{
		name = O2 pressure control
		title = O2 pressure control
		modifier = _PressureControlOxygen,non_breathable
		input = ElectricCharge@0.0858
		input = Oxygen@0.35
		output = Atmosphere@0.35
	}

	// N2 Pressure Control
	// ISS has normal air pressure at 101.3kPa (14.7 psi)
	// convention: 1 capacity = enough to compensate for leaks in 70 m^2 surface (a cube of 40 m^3 volume)
	Process
	{
		name = N2 pressure control
		modifier = _PressureControl,non_breathable
		input = ElectricCharge@0.0858
		input = Nitrogen@0.35
		output = Atmosphere@0.35
	}

	// Air Pump
	// convention: When the vessel is in a breathable atmosphere, pressure control is automatically disabled and the air pump will pump air
	// into the vessel to maintain pressurization of any habitable areas, one example is inflating inflatable habitats without using any
	// N2 when a breathable atmosphere is present.
	Process
	{
		name = air pump
		title = #KERBALISM_Process_AirPump
		modifier = _AirPump,breathable
		input = ElectricCharge@0.00258
		output = Atmosphere@3.675
	}

	// Atmosphere Leaks
	Process
	{
		name = atmo leaks
		title = #KERBALISM_Process_AtmoLeaks
		modifier = surface,non_breathable
		input = Atmosphere@0.000000949892841  // leakage of Atmosphere (N2) per second for a surface area of 1 m²
		// From ISS: see https://www.nasa.gov/pdf/179225main_ISS_Poster_Back.pdf and 	https://ntrs.nasa.gov/archive/nasa/casi.ntrs.nasa.gov/20110012997.pdf
		// 935 m³ volume, ~1105 m² surface (estimated), 0.227 Kg/day (structural)
		// Surface estimation: see the "Atmo Leak Estimation" spreadsheet in misc.
		// 1 Kerbin day is 1/4 of a human day so 0.227/4 = 0.05675 Kg/day
		// 0.05675 Kg/day over 1105 m² = 0.0513352488 (g/m²)/day.
		// Using the density of N2 from CRP we get 1.251 g/KSPunit = 0.0410353707 (unit/m²)/day
		// That divided over 21600 secs = 0.000001899785682 (unit/m²)/sec
	}

	// ========================================================================
	// Water and Waste
	// ========================================================================

	// Water Recycler
	// Based on ISS Urine Reclamation
	// convention: 1 capacity = enough to recycle output of 1 crew member
	Process
	{
		name = water recycler
		title = #KERBALISM_Process_WaterRecycler
		modifier = _WaterRecycler
		input = ElectricCharge@0.0446
		input = WasteWater@0.00002314814
		output = Water@0.00001967592 // We are targeting about an 85% recovery rate, so this value should be 85% the waste water input.
		output = Ammonia@0.0000841805 
		output = CarbonDioxide@0.00003318155 //Both ammonia and CO2 ratios are based on the original ones from stock Kerbalism
		dump_valve = Water,Ammonia,CarbonDioxide,Water&Ammonia,Water&CarbonDioxide,Ammonia&CarbonDioxide
	}

	// Waste Incinerator
	Process
	{
		name = waste incinerator
		title = #KERBALISM_Process_WasteIncinerator
		modifier = _WasteIncinerator
		input = Waste@0.00005413335// H18C82
		input = Oxygen@0.07945971245
		output = CarbonDioxide@0.07487198025
		output = Water@0.00000656295
		output = ElectricCharge@0.005
		dump_valve = Water,ElectricCharge,Water&ElectricCharge
	}

	// Waste Processor
	Process
	{
		name = waste processor
		title = #KERBALISM_Process_WasteProcessor
		modifier = _WasteProcessor
		input = ElectricCharge@0.065556
		input = Waste@0.00002314814
		// According to https://www.ncbi.nlm.nih.gov/pmc/articles/PMC4500995/ feces contains approximately 0.7% nitrogen.
		// Feces is considered to the dominant source of Waste
		// Waste is 975.3 times more dense than Ammonia
		output = Ammonia@0.0000122703
	}

	// Waste Compressor
	Process
	{
		name = waste compressor
		title = #KERBALISM_Process_WasteCompressor
		modifier = _WasteCompressor
		input = ElectricCharge@1.2
		input = Waste@0.00000525285 //Same mass ratio as stock compressor
		output = Shielding@0.00000000801491
	}

	// ========================================================================
	// Electrics
	// ========================================================================

	// ------------------------------------------------------------------------
	// RTGs
	// ------------------------------------------------------------------------

	// RTG
	Process
	{
		name = RTG
		modifier = _RTG
		input = _RTG@0.00000000039637  // 40 year half-life
		output = ElectricCharge@1.0
		dump = true
	}
	
	// ========================================================================
	// Fuel Cells
	// ========================================================================

	// Needs testing . . .

	// Kerbalism's default Fuel Cell
	Process
	{
		name = fuel cell
		title = Fuel Cell Test
		modifier = _KerbalismFuelCell
		input = Hydrogen@1.0011122892
		input = Oxygen@0.5065967413
		output = Water@0.0008043014
		output = ElectricCharge@2.40  // calculated from H2 @3.75ml/s gives 9W = 2400W/Liter. Referenced from page 14 of https://peer.asee.org/performance-of-a-pem-fuel-cell-system.pdf
		dump_valve = Water
	}

	// Same as Kerbalism's Fuel Cell but with liquified reactants
	Process
	{
		name = hydrolox fuel cell
		title = Liquid Fuel Cell Test
		modifier = _KerbalismLiquidFuelCell
		input = LqdHydrogen@0.00127
		input = LqdOxygen@0.0006260
		output = Water@0.0008043014
		output = ElectricCharge@2.40
		dump_valve = Water
	}


	// Fuel Cells are based off of 1.0kW produced. For the process controller, we
	// should be multiplying the capacity * the amount we want produced
	// Eg. Apollo Fuel Cells were 1.42kW each so the capacity = 1.42
	
	// Gemini Fuel cell
	// LO2: 3.58 per day
	// LH2: 7.76 per day
	// -> H2O: 4.60 per day
	Process
	{
		name = fuel cell gemini
		modifier = _FuelCellGemini
		// input = LqdOxygen@0.00008282
		// input = LqdHydrogen@0.000168065
		// output = Water@0.000106416
		input = LqdOxygen@0.00008282
		input = LqdHydrogen@0.000168065
		output = Water@0.000106416
		output = ElectricCharge@1.0
		dump = Water
	}
	
	// Apollo Alkaline Fuel cell
	// LO2: 3.14 per day
	// LH2: 6,36 per day
	// -> H2O: 4.023 per day
	Process
	{
		name = fuel cell
		modifier = _FuelCell
		input = LqdOxygen@0.00007247
		input = LqdHydrogen@0.000147057
		output = Water@0.000093114
		output = ElectricCharge@1.0
		dump = Water
	}
	
	// Gaseous Reactante Fuel Cell
	// AES LEM Shelter Allis-Chalmers high temp fuel cell
	// Source: Apollo Extension Systems - Lunar Excursion Module Phase B vol. 5

	// O2: 2593 per day
	// H2: 5161 per day
	// -> H20: 4.15 per day
	Process
	{
		name = gaseous reactant fuel cell
		modifier = _FuelCellGas
		input = Oxygen@0.0604438
		input = Hydrogen@0.119453
		output = Water@0.0000959646
		output = ElectricCharge@1.0
		dump = Water
	}
	
	// Soyuz-LOK Volna-20 Fuel cell
	// source: http://www.astronautix.com/l/lokpao.html
	// no good info, but 600 kg reactants for 500 hours suggests not very efficient
	// same as Gemini (70% by LHV) for now I guess . . .
	// LO2: 3.58 per day
	// LH2: 7.76 per day
	// -> H2O: 4.60 per day
	Process
	{
		name = fuel cell volna20
		modifier = _FuelCellVolna20
		input = LqdOxygen@0.00008282
		input = LqdHydrogen@0.000168065
		output = Water@0.000106416
		output = ElectricCharge@1.0
		dump = Water
	}
	
	// Space Shuttle fuel cells
	// source: https://ntrs.nasa.gov/api/citations/20040010319/downloads/20040010319.pdf
	// "over 70% efficient". Assuming that's using HHV to match modern conventions, not LHV.
	// Guessing 75% efficient by HHV, which is 88.6% efficient by LHV
	// LO2: 2.83 per day
	// LH2: 5,74 per day
	// -> H2O: 3,64 per day
	Process
	{
		name = fuel cell shuttle
		modifier = _FuelCellShuttle
		input = LqdOxygen@0.0000654357
		input = LqdHydrogen@0.0001327828
		output = Water@0.0000840758
		output = ElectricCharge@1.0
		dump = Water
	}

	// Methane fuel cells
	// source: https://pubs.rsc.org/en/content/articlelanding/2017/ra/c7ra05245f
	// https://pubs.rsc.org/en/content/articlelanding/2017/ra/c7ra05245f
	// Still in development, not going for a specific technology
	// LO2: 3.63 per day
	// LCH4: 2.44 per day
	// -> H2O: 2.34 per day
	// -> CO2: 1460 per day

	Process
	{
		name = fuel cell ch4
		modifier = _FuelCellCH4
		input = LqdOxygen@0.0000840087
		input = LqdMethane@0.0000564461
		output = Water@0.0000539642
		output = CarbonDioxide@0.0337858
		output = ElectricCharge@1.0
		dump = Water,CarbonDioxide
	}

	// Monopropellant fuel cell
	// Kerbalism's default
	
	// O2: 22058 per day
	// Monopropellant: 7.79 per day
	// -> N2: 21765 per day
	// -> H20: 35,03 per day
	Process
	{
		name = monoprop fuel cell
		title = Hydrazine APU
		modifier = _MonopropAPU
		input = Oxygen@0.510619148925
		input = MonoPropellant@0.000180254024775 // (Hydrazine@0.000718143525)
		output = Nitrogen@0.5038381295
		output = Water@0.0008106876
		output = ElectricCharge@0.1
		dump_valve = Nitrogen,Water,Nitrogen&Water
	}

	// ========================================================================
	// Freezers and Heaters
	// ========================================================================

	// Oxygen

	// LO2: 0,67
	// -> O2: 540,46
	// Kerbals require 37 O2 per day so ... 0.07 capacity should be enough for one kerbal -> (Test this)
	Process
	{
		name = lox to ox converter
		modifier = _LOXConverter
		input = LqdOxygen@0.0000154599
		input = ElectricCharge@0.00467
		output = Oxygen@0.0125104279
	}

	Process
	{
		name = ox to lox converter
		modifier = _OXConverter
		input = Oxygen@0.0504
		input = ElectricCharge@0.334 // Best option 2873 W for 2.2kg/hr source: https://www.sciencedirect.com/science/article/pii/S0011227517302187
		output = LqdOxygen@0.00006228235886
	}

	Process
	{
		name = thawOxygen
		title = Thaw Oxygen
		modifier = _ThawOxygen
		input = ElectricCharge@3.0
		input = Oxidizer@0.032
		output = Oxygen@115.2
	}

	Process
	{
		name = freezeOxygen
		title = Freeze Oxygen
		modifier = _FreezeOxygen
		input = ElectricCharge@1.5
		input = Oxygen@115.2
		output = Oxidizer@0.032
	}

	// Hydrogen
	Process
	{
		name = lh2 to h2 converter
		modifier = _LH2Converter
		input = LqdHydrogen@0.001325490486
		input = ElectricCharge@0.294
		output = Hydrogen@1.044616251
	}

	Process
	{
		name = h2 to lh2 converter
		modifier = _H2Converter
		input = Hydrogen@0.042
		input = ElectricCharge@0.08835372	// source: https://cordis.europa.eu/project/id/278177/reporting/pl 6.5kWh/kg
		output = LqdHydrogen@0.00005329287227
	}

	Process
	{
		name = thawHydrogen
		title = Thaw Hydrogen
		modifier = _ThawHydrogen
		input = ElectricCharge@3.0
		input = LqdHydrogen@0.14
		output = Hydrogen@112.125
	}

	Process
	{
		name = freezeHydrogen
		title = Freeze Hydrogen
		modifier = _FreezeHydrogen
		input = ElectricCharge@1.5
		input = Hydrogen@112.125
		output = LqdHydrogen@0.14
	}
	
	// Methane
	Process
	{
		name = lch4 to ch4 converter
		modifier = _LCH4Converter
		input = LqdMethane@0.0000469913
		input = ElectricCharge@0.00760
		output = Methane@0.027894
	}

	Process
	{
		name = ch4 to lch4 converter
		modifier = _CH4Converter
		input = Methane@0.027894
		input = ElectricCharge@0.06127
		output = LqdMethane@0.0000469913
	}

	Process
	{
		name = freezeMethane
		title = Freeze Methane
		modifier = _FreezeMethane
		input = ElectricCharge@1.5
		input = Methane@111.94
		output = LqdMethane@0.19
	}

	Process
	{
		name = thawMethane
		title = Thaw Methane
		modifier = _ThawMethane
		input = ElectricCharge@3.0
		input = LqdMethane@0.19
		output = Methane@111.94
	}

	// Ammonia
	Process
	{
		name = freezeAmmonia
		title = Freeze Ammonia
		modifier = _FreezeAmmonia
		input = ElectricCharge@1.5
		input = Ammonia@221.47
		output = LqdAmmonia@0.12
	}

	Process
	{
		name = thawAmmonia
		title = Thaw Ammonia
		modifier = _ThawAmmonia
		input = ElectricCharge@3.0
		input = LqdAmmonia@0.12
		output = Ammonia@221.47
	}

	// CO2
	Process
	{
		name = freezeCarbonDioxide
		title = Freeze Carbon Dioxide
		modifier = _FreezeCarbonDioxide
		input = ElectricCharge@1.5
		input = CarbonDioxide@112.79
		output = LqdCO2@0.19
	}

	Process
	{
		name = thawCarbonDioxide
		title = Thaw Carbon Dioxide
		modifier = _ThawCarbonDioxide
		input = ElectricCharge@3.0
		input = LqdCO2@0.19
		output = CarbonDioxide@112.79
	}

	// CO
	Process
	{
		name = freezeCarbonMonoxide
		title = Freeze Carbon Monoxide
		modifier = _FreezeCarbonMonoxide
		input = ElectricCharge@1.5
		input = CarbonMonoxide@112.04
		output = LqdCO@0.1773
	}

	Process
	{
		name = thawCarbonMonoxide
		title = Thaw Carbon Monoxide
		modifier = _ThawCarbonMonoxide
		input = ElectricCharge@3.0
		input = LqdCO@0.1773
		output = CarbonMonoxide@112.04
	}

	// Nitrogen
	Process
	{
		name = freezeNitrogen
		title = Freeze Nitrogen
		modifier = _FreezeNitrogen
		input = ElectricCharge@1.5
		input = Nitrogen@111.965
		output = LqdNitrogen@0.17
	}

	Process
	{
		name = thawNitrogen
		title = Thaw Nitrogen
		modifier = _ThawNitrogen
		input = ElectricCharge@3.0
		input = LqdNitrogen@0.17
		output = Nitrogen@111.965
	}

	// ========================================================================
	// | Sickbays
	// ========================================================================
	
	// Colony Life
	Process
	{
		name = colony-life
		title = Comforts
		modifier = _SickbayColony,landed
		input = ElectricCharge@0.1 // 100W for miscellaneous high efficiency electronics and comforts
		input = Water@0.00011574 // 10L per day for personal hygiene, washing clothes, and more relaxed water use
		output = WasteWater@0.00011574
		dump = true
		cures = stress@0.0000000084 // 5% margin, to cover almost any astronaut. Some may still accumulate some stress
	}

	// Orbital Conforts
	Process
	{
		name = orbital-conforts
		title = Orbital Conforts (washing clothes, electronics, shower)
		modifier = _SickbayOrbital
		input = ElectricCharge@0.15 // 150W for miscellaneous high efficiency electronics. Slightly more than landed
		input = Water@0.00005787 // 5L per day for zero-g shower, washing clothes, and more relaxed water use
		output = WasteWater@0.00005787
		dump = true
		cures = stress@0.00000000463 // no margin, so a bit more astronauts will accumulate some stress
	}

	// TV
	Process
	{
		name = tranquilizing vortex
		title = Tranquilizeing Vortex
		modifier = _SickbayTV
		input = ElectricCharge@0.057 // 32" OLED TV, source : https://www.rtings.com/tv/learn/led-oled-power-consumption-and-electricity-cost
		cures = stress@0.00000000463
	}

	// RDU
	Process
	{
		name = radiation detox unit
		title = Radiation Detoxication Unit
		modifier = _SickbayRDU
		input = ElectricCharge@3.5
		input = Oxygen@0.002
		output = CarbonDioxide@0.001987945992
		cures = radiation@0.000005555554 // 0.02 rad/h
		dump = true
	}

	// ========================================================================
	// ISRU Converters
	// ========================================================================

	// ------------------------------------------------------------------------
	// Fuel Generators
	// ------------------------------------------------------------------------
	
	// Hydrolox
	Process
	{
		name = hydrolox //Might want to add a higher-power, decently faster version
		title = Hydrolox 
		modifier = _Hydrolox
		input = ElectricCharge@12
		input = Water@0.00869395325
		output = LqdHydrogen@0.00859459105
		output = Oxidizer@0.0009650055
		dump_valve = LqdHydrogen,Oxidizer
	}

	// Kerolox
	Process
	{
		name = kerolox
		title = Kerolox
		modifier = _Kerolox
		input = ElectricCharge@24 //Made more power hungry so that Methalox is more effective
		input = LqdHydrogen@0.00362627105
		input = LqdCO2@0.0044124898
		output = LiquidFuel@0.0003341616
		output = Oxidizer@0.0007525984
		dump_valve = LiquidFuel,Oxidizer
	}	

	// Kerosene
	Process
	{
		name = kerosene
		title = Kerosene
		modifier = _Kerosene
		input = ElectricCharge@24 
		input = LqdHydrogen@0.0117495718
		input = Carbon@0.0021911345
		output = LiquidFuel@0.0010867671
	}

	// Methalox
	Process
	{
		name = methalox
		title = Methalox 
		modifier = _Methalox
		input = ElectricCharge@12
		input = LqdCO2@0.0042416153
		input = LqdHydrogen@0.00644725775
		output = LqdMethane@0.0042642387
		output = Oxidizer@0.0007239018
		dump_valve = LqdMethane,Oxidizer
	}

	// A50 + NTO
	Process
	{
		name = hypergolic
		title = Hypergolic
		modifier = _Hypergolic
		input = ElectricCharge@12
		input = Carbon@0.0010229338
		input = LqdHydrogen@0.0023868403
		input = LqdNitrogen@0.0030333349
		input = Oxidizer@0.0001228652
		output = Aerozine50@0.00203346255
		output = NitrogenTetroxide@0.00248534135
		dump_valve = Aerozine50,NitrogenTetroxide
	}

	// A50
	Process
	{
		name = aerozine50
		title = Aerozine50 
		modifier = _Aerozine50
		input = ElectricCharge@12
		input = Carbon@0.001930143
		input = LqdHydrogen@0.00450366965
		input = LqdNitrogen@0.0012867633
		output = Aerozine50@0.00603758845
	}	

	// NTO
	Process
	{
		name = nitrogenTetroxide
		title = NitrogenTetroxide
		modifier = _NitrogenTetroxide
		input = ElectricCharge@12
		input = LqdNitrogen@0.0051596344
		input = Oxidizer@0.00023553475
		output = NitrogenTetroxide@0.00374743635
	}

	// Monoproppellant A
	Process
	{
		name = hydrazineA
		title = Hydrazine A
		modifier = _HydrazineA
		input = ElectricCharge@12.0
		input = LqdHydrogen@0.00964976355
		input = LqdNitrogen@0.0057583185
		output = MonoPropellant@0.001358478
	}

	// Monoproppellant B
	Process
	{
		name = hydrazineB
		title = Hydrazine B 
		modifier = _HydrazineB
		input = ElectricCharge@12.0
		input = LqdAmmonia@0.00773956725
		output = LqdHydrogen@0.00809550895
		output = MonoPropellant@0.0012150395
		dump_valve = LqdHydrogen,MonoPropellant		
	}

	// Liquid Ammonia
	Process
	{
		name = ammoniaBrewer
		title = Ammonia Brewer
		modifier = _AmmoniaBrewer
		input = ElectricCharge@12.0
		input = LqdHydrogen@0.0136180058
		input = LqdNitrogen@0.0054178463
		output = LqdAmmonia@0.00773909695
	}

	// ------------------------------------------------------------------------
	// Gaseous Processes
	// ------------------------------------------------------------------------

	// Sabatier
	Process
	{
		name = sabatierProcess   
		title = Sabatier Process
		modifier = _SabatierProcess
		input = ElectricCharge@8.082126 // calculated using 3.256 J/(g K) (sustained heating to 575K)
		input = CarbonDioxide@2.3538663525
		input = Hydrogen@9.35960695395
		output = Water@0.0060157147
		output = Methane@2.33477183275

		// Note that LiquidFuel has a density of 5Kg/Unit
		dump_valve = Water,Methane
	}

	// Haber
	Process
	{
		name = haberProcess
		title = Haber Process
		modifier = _HaberProcess
		input = ElectricCharge@5.94773  // calculated using 2.9367 J/(g K) (sustained heating to 700K)
		input = Nitrogen@3.5723767579
		input = Hydrogen@10.7318595766
		output = Ammonia@7.0661085825
	}

	// Selective Catalytic Oxygen
	Process
	{
		name = selectiveCatalyticOxidation
		title = Selective Catalytic Oxidation
		modifier = _SelectiveCatalyticOxidation
		input = ElectricCharge@7.166717  // calculated using 2.9367 J/(g K) (sustained 	heating to 700K)
		input = Ammonia@2.90710543175
		input = Oxygen@2.30269002068
		output = Nitrogen@1.4697305816
		output = Water@0.00575243485
		dump_valve = Water,Nitrogen
	}

	// CO2 A
	Process
	{
		name = carbonMonoxideA
		title = Carbon Monoxide A
		modifier = _CarbonMonoxideA
		input = ElectricCharge@6.0
		input = CarbonDioxide@2.7647456834
		output = Oxygen@0.02866767336
		output = CarbonMonoxide@4.3470717121
		dump_valve = CarbonMonoxide,Oxygen
	}

	// CO2 B
	Process
	{
		name = carbonMonoxideB
		title = Carbon Monoxide B
		modifier = _CarbonMonoxideB
		input = ElectricCharge@6.0
		input = Carbon@0.00103483745
		input = Water@0.0052170717
		output = CarbonMonoxide@4.05466645075
		output = Hydrogen@4.0657784227
		dump_valve = CarbonMonoxide,Hydrogen
	}
	
	// ------------------------------------------------------------------------
	// Life Support Related
	// ------------------------------------------------------------------------

	// Solid Oxide Electrolysis
	Process
	{
		name = solidOxideElectrolysis
		title = Solid Oxide Electrolysis
		modifier = _SolidOxideElectrolysis
		input = ElectricCharge@20.0   // calculated using 10.1749 J/(g K)  (sustained heating to 1125K)
		input = CarbonDioxide@2.7851184264
		output = Oxygen@2.88781590045
		output = Shielding@0.0000189736 // makes Shielding out of waste Carbon
		dump_valve = Shielding,Oxygen
	}

	// Molten Regolith Electrolysis
	Process
	{
		name = moltenRegolithElectrolysis
		title = Molten Regolith Electrolysis
		modifier = _MoltenRegolithElectrolysis
		input = ElectricCharge@20.0 // 2 kW MRE reactor at 2300 K with heat corrosion resistant crucible
		input = Ore@0.0005433846
		output = Oxygen@3.4494134551 // 42% of regolith is O2
		output = CarbonDioxide@0.16734580695  // approx 2% of regolith is CO2, released in the pre-heating stage @950K
		output = Shielding@0.0000042193// makes Shielding out of waste Slag
		dump_valve = Shielding&CarbonDioxide,Shielding,Shielding&Oxygen,CarbonDioxide,Oxygen,CarbonDioxide&Oxygen
	}

	// Molten Regolith Electrolysis Rock
	Process
	{
		name = moltenRegolithElectrolysisRock
		title = Molten Regolith Electrolysis (Rock)
		modifier = _MoltenRegolithElectrolysisRock
		input = ElectricCharge@20.0
		input = Rock@0.0021734819
		output = Oxygen@3.4494134551
		output = CarbonDioxide@0.16734580695
		output = Shielding@0.0000042193
		dump_valve = Shielding&CarbonDioxide,Shielding,Shielding&Oxygen,CarbonDioxide,Oxygen,CarbonDioxide&Oxygen
	}

	// ------------------------------------------------------------------------
	// Splitters, Extractors, and Fusers
	// ------------------------------------------------------------------------
	
	// Water Electrolysis
	Process
	{
		name = water electrolysis 
		title = #KERBALISM_Process_WaterElectrolysis
		modifier = _WaterElectrolysis
		input = ElectricCharge@18.0 //reverse of H2O2 Fuel Cell
		input = Water@0.0048205
		output = Hydrogen@3.75000000013
		output = Oxygen@1.9265
		dump_valve = Hydrogen,Oxygen
	}

	// Alumina Splitter
	Process
	{
		name = aluminaSplitter 
		title = Alumina Splitter
		modifier = _AluminaSplitter
		input = ElectricCharge@6.0
		input = Alumina@0.0013653042
		output = Metals@0.0005767675
		output = Oxygen@0.6631047656
		dump_valve = Metals,Oxygen
	}	

	// Carbon Extractor
	Process
	{
		name = carbonExtractor
		title = Carbon Extractor
		modifier = _CarbonExtractor
		input = ElectricCharge@12.0
		input = Ore@0.0007655176
		output = Carbon@0.00152976145
	}

	// Carbon Fuser
	Process
	{
		name = carbonFuser
		title = Carbon Fuser
		modifier = _CarbonFuser
		input = ElectricCharge@12.0
		input = Carbon@0.012
		input = Oxygen@11.6950310523
		output = CarbonDioxide@11.2909
	}

	// CO2 Splitter
	Process
	{
		name = carbonDioxideSplitter
		title = Carbon Dioxide Splitter
		modifier = _CarbonDioxideSplitter
		input = ElectricCharge@6.0
		input = CarbonDioxide@11.2909
		output = Oxygen@11.6950310523
		output = Carbon@0.012
		dump_valve = Carbon,Oxygen
	}	

	// Hydrates Splitter
	Process
	{
		name = hydratesSplitter // Original
		title = Hydrates Splitter
		modifier = _HydratesSplitter
		input = ElectricCharge@6.0
		input = Hydrates@0.00362256445
		output = Water@0.0025489501
		output = XenonGas@0.00012730605
		output = ArgonGas@0.0079186133
		output = MetallicOre@0.0000241249
		output = Oxygen@0.61106410855
		dump_valve = XenonGas&ArgonGas&MetallicOre&Oxygen,Water&XenonGas&ArgonGas&MetallicOre,XenonGas&ArgonGas&MetallicOre,Water&ArgonGas&MetallicOre&Oxygen,Water&XenonGas&MetallicOre&Oxygen,Water&XenonGas&ArgonGas&Oxygen,Water,XenonGas,ArgonGas,MetallicOre,Oxygen
	}

	// Monazite Splitter
	Process
	{
		name = monaziteSplitter
		title = Monazite Splitter
		modifier = _MonaziteSplitter
		input = ElectricCharge@12.0
		input = Monazite@0.00108677505
		output = RareMetals@0.0005255402
		output = Phosphorus@0.00013033395
		output = Oxygen@0.4916958398
		dump_valve = RareMetals,Phosphorus,Oxygen,RareMetals&Phosphorus,RareMetals&Oxygen,Phosphorus&Oxygen
	}

	// Silicates Splitter
	Process
	{
		name = silicatesSplitter
		title = Silicates Splitter
		modifier = _SilicatesSplitter
		input = ElectricCharge@15.0
		input = Silicates@0.2458479199
		output = Silicon@0.0008526421
		output = Oxygen@2.4825741373
		dump_valve = Silicon,Oxygen
	}

	// Spodumene Splitter
	Process
	{
		name = spodumeneSplitter 
		title = Spodumene Splitter
		modifier = _SpodumeneSplitter
		input = ElectricCharge@15.0
		input = Spodumene@0.0017528508
		output = Lithium@0.001440572
		output = Metals@0.00038172315
		output = Silicates@0.00067485255
		dump_valve = Lithium,Lithium&Silicates,Lithium&Metals,Metals&SilicatesSilicates,Metals
	}

	// Deuterium Production
	Process 
	{
		name = deuteriumProduction
		title =  Deuterium Production
		modifier = _DeuteriumProduction
		input = ElectricCharge@6.0
		input = Water@0.00869414195
		output = Hydrogen@6.662949217
		output = Oxygen@3.48038317515
		output = LqdDeuterium@0.00000574486
		dump_valve = Hydrogen,Oxygen,LqdDeuterium,Hydrogen&Oxygen,LqdDeuterium&Oxygen,Hydrogen&LqdDeuterium
	}

	// Other . . .

	// Glykerol Brewer
	Process
	{
		name = glykerolBrewer
		title = Glykerol Brewer
		modifier = _GlykerolBrewer
		input = ElectricCharge@24.0
		input = Water@0.0058423563
		input = Carbon@0.00086947215
		output = Glykerol@0.0000578705
		output = Oxygen@0.0088182075
		dump_valve = Oxygen,Glykerol
	}

	// ========================================================================
	// Launch Clamp Pump
	// ========================================================================

	Process
	{
		name = launch clamp pump
		modifier = _ClampPump
		output = ElectricCharge@1.0
		output = Oxygen@1.0
		output = LqdOxygen@1.0
		output = Hydrogen@1.0
		output = LqdHydrogen@1.0
		output = Food@1.0
		output = Water@1.0
		output = Nitrogen@1.0
	}
}
// End of Config

// ============================================================================
// Add configurable processes to the kerbalism parts
// ============================================================================

// Life Support Module
@PART[kerbalism-lifesupportmodule]:NEEDS[ProfileDefault]:FIRST
{
	%SK_LifeSupportSystem = True
	%LSCapacity = 3
}

// Chemical Plant
@PART[kerbalism-chemicalplant]:NEEDS[ProfileDefault]:FIRST
{
	%SK_ISRU = True
	%ISRUCapacity = 3
}

// Freezer
@PART[kerbalism-freezer]:NEEDS[ProfileDefault]:FIRST
{
	%SK_Freezer = True
	%FreezerCapacity = 1
}

// Heater
@PART[kerbalism-heater]:FIRST
{
	%SK_Heater = True
	%HeaterCapacity = 1
}

// Air Harvesters
@PART[sensorAtmosphere]:FIRST
{
	@rescaleFactor = 0.4
}
+PART[sensorAtmosphere]:FIRST
{
	@name = kerbalism-airHarvester
	@title = Air Harvester
	@rescaleFactor = 0.8
	%SK_AirHarvester = True
	%AirHarvesterCapacity = 1
}
+PART[sensorAtmosphere]:FIRST
{
	@name = kerbalism-airHarvesterLarge
	@title = Large Air Harvester
	@rescaleFactor = 1.6
	%SK_AirHarvester = True
	%AirHarvesterCapacity = 5
}

// Oceanic Harvesters
@PART[kerbalism-minipump]:FIRST
{
	%SK_Pump = True
	%PumpCapacity = 1
}
@PART[kerbalism-radialpump]:FIRST
{
	%SK_Pump = True
	%PumpCapacity = 5
}

// Exosphere Harvesters
@PART[kerbalism-exoscoop]:FIRST
{
	%SK_ExoScoop = True
	%ExoScoopCapacity = 1
}

// Greenhouses
@PART[kerbalism-greenhouse]:FIRST
{
	%SK_Greenhouse = True
	%GreenhouseCapacity = 0.5 //1 capacity means supports the food needs of one kerbal indefinetly, and the O2 needs of two 
	%lamps = Cylinder001 
	%shutters = door
	%plants =	
}

// RTGs
@PART[rtg]:FIRST
{
	%SK_RTG = True
	%RTGCapacity = 1
}

// ============================================================================
// Add EC Generation to Launch Clamps
// ============================================================================

@PART:HAS[@MODULE[LaunchClamp]]:NEEDS[ProfileDefault]:FOR[KerbalismDefault]
{
	MODULE
	{
		name = ProcessController
		resource = _ClampPump
		title = Resource Pump
		capacity = 10.0
		running = true
		toggle = true
	}
	MODULE
	{
		name = ProcessController
		resource = _AirPump
		title = Air Pump
		capacity = 5.0
		running = true
		toggle = true
	}
	!MODULE[ModuleGenerator] {}
}

@PART:HAS[@MODULE[ModuleRestockLaunchClamp]]:NEEDS[ProfileDefault]:FOR[KerbalismDefault]
{
	MODULE
	{
		name = ProcessController
		resource = _ClampPump
		title = Resource Pump
		capacity = 10.0
		running = true
		toggle = true
	}
	MODULE
	{
		name = ProcessController
		resource = _AirPump
		title = Air Pump
		capacity = 5.0
		running = true
		toggle = true
	}
	!MODULE[ModuleGenerator] {}
}

// ============================================================================
// Pseudo-resources used by processes
// ============================================================================

RESOURCE_DEFINITION
{
  name = _BasicLiOHScrubber
  density = 0.0
  isVisible = false
}

RESOURCE_DEFINITION
{
  name = _AdvancedLiOHScrubber
  density = 0.0
  isVisible = false
}

RESOURCE_DEFINITION
{
  name = _BasicRegenerativeScrubber
  density = 0.0
  isVisible = false
}

RESOURCE_DEFINITION
{
  name = _AdvancedRegenerativeScrubber
  density = 0.0
  isVisible = false
}

RESOURCE_DEFINITION
{
  name = _EVAScrubber
  density = 0.0
  isVisible = false
}

RESOURCE_DEFINITION
{
  name = _WaterSublimator
  density = 0.0
  isVisible = false
}
// only present in EVA suit

RESOURCE_DEFINITION
{
  name = _MRP
  density = 0.0
  isVisible = false
}
@PART:HAS[@MODULE[ProcessController]:HAS[#resource[_MRP]]]:NEEDS[ProfileDefault]:LAST[Kerbalism]
{
	@tags ^=:$:, mrp, regolith, molten regolith pyrolosis
}

RESOURCE_DEFINITION
{
  name = _HTPSynthesis
  density = 0.0
  isVisible = false
}
@PART:HAS[@MODULE[ProcessController]:HAS[#resource[_HTPSynthesis]]]:NEEDS[ProfileDefault]:LAST[Kerbalism]
{
	@tags ^=:$:, HTP, HTP Synthesis
}

RESOURCE_DEFINITION
{
  name = _HaberBosch
  density = 0.0
  isVisible = false
}
@PART:HAS[@MODULE[ProcessController]:HAS[#resource[_HaberBosch]]]:NEEDS[ProfileDefault]:LAST[Kerbalism]
{
	@tags ^=:$:, haber-bosch, ammonia
}

RESOURCE_DEFINITION
{
  name = _OstwaldProcess
  density = 0.0
  isVisible = false
}
@PART:HAS[@MODULE[ProcessController]:HAS[#resource[_OstwaldProcess]]]:NEEDS[ProfileDefault]:LAST[Kerbalism]
{
	@tags ^=:$:, ostwald, ammonia, NTO
}

RESOURCE_DEFINITION
{
  name = _HydrazineSynthesis
  density = 0.0
  isVisible = false
}
@PART:HAS[@MODULE[ProcessController]:HAS[#resource[_HydrazineSynthesis]]]:NEEDS[ProfileDefault]:LAST[Kerbalism]
{
	@tags ^=:$:, hydrazine synthesis, hydrazine, HTP
}

RESOURCE_DEFINITION
{
  name = _RWGS
  density = 0.0
  isVisible = false
}
@PART:HAS[@MODULE[ProcessController]:HAS[#resource[_RWGS]]]:NEEDS[ProfileDefault]:LAST[Kerbalism]
{
	@tags ^=:$:, rwgs, se-rwgs, sabatier, sabatier electrolysis, electrolysis
}

RESOURCE_DEFINITION
{
  name = _algae
  density = 0.0
  isVisible = false
}
@PART:HAS[@MODULE[ProcessController]:HAS[#resource[_algae]]]:NEEDS[ProfileDefault]:LAST[Kerbalism]
{
	@tags ^=:$:, algae, algae bioreactor, bioreactor, food
}


RESOURCE_DEFINITION
{
  name = _MOXIE
  density = 0.0
  isVisible = false
}
@PART:HAS[@MODULE[ProcessController]:HAS[#resource[_MOXIE]]]:NEEDS[ProfileDefault]:LAST[Kerbalism]
{
	@tags ^=:$:, moxie, mars oxygen, oxygen, carbon dioxide, co2
}

RESOURCE_DEFINITION
{
  name = _CH4Pyrolosis
  density = 0.0
  isVisible = false
}
@PART:HAS[@MODULE[ProcessController]:HAS[#resource[_CH4Pyrolosis]]]:NEEDS[ProfileDefault]:LAST[Kerbalism]
{
	@tags ^=:$:, ch4, ch4 pyrolosis, methane pyrolosis, plasma methane pyrolosis
}

RESOURCE_DEFINITION
{
  name = _PressureControl
  density = 0.0
  isVisible = false
}
@PART:HAS[@MODULE[ProcessController]:HAS[#resource[_PressureControl]]]:NEEDS[ProfileDefault]:LAST[Kerbalism]
{
	@tags ^=:$:, pressure, pressure control, pressure controller, nitrogen, nitrogen pressure control, atmosphere
}

RESOURCE_DEFINITION
{
  name = _PressureControlOxygen
  density = 0.0
  isVisible = false
}
@PART:HAS[@MODULE[ProcessController]:HAS[#resource[_PressureControlOxygen]]]:NEEDS[ProfileDefault]:LAST[Kerbalism]
{
	@tags ^=:$:, pressure, pressure control, pressure controller, oxygen, oxygen pressure control, atmosphere
}

RESOURCE_DEFINITION
{
  name = _AirPump
  density = 0.0
  isVisible = false
}
@PART:HAS[@MODULE[ProcessController]:HAS[#resource[_AirPump]]]:NEEDS[ProfileDefault]:LAST[Kerbalism]
{
	@tags ^=:$:, airpump, air pump, pressure, atmosphere
}

RESOURCE_DEFINITION
{
  name = _WasteProcessor
  density = 0.0
  isVisible = false
}

RESOURCE_DEFINITION
{
  name = _WasteCompressor
  density = 0.0
  isVisible = false
}

RESOURCE_DEFINITION
{
  name = _WasteIncinerator
  density = 0.0
  isVisible = false
}
@PART:HAS[@MODULE[ProcessController]:HAS[#resource[_WasteIncinerator]]]:NEEDS[ProfileDefault]:LAST[Kerbalism]
{
	@tags ^=:$:, waste, waste incinerator, waste burner, incinerator, co2
}

RESOURCE_DEFINITION
{
  name = _RTG
  density = 0.0
  isVisible = false
}
@PART:HAS[@MODULE[ProcessController]:HAS[#resource[_RTG]]]:NEEDS[ProfileDefault]:LAST[Kerbalism]
{
	@tags ^=:$:, rtg, radioisotope thermoelectric generator, radioactive, generator
}

RESOURCE_DEFINITION
{
  name = _FuelCell
  density = 0.0
  isVisible = false
}

RESOURCE_DEFINITION
{
  name = _FuelCellGemini
  density = 0.0
  isVisible = false
}

RESOURCE_DEFINITION
{
  name = _FuelCellVolna20
  density = 0.0
  isVisible = false
}
RESOURCE_DEFINITION
{
  name = _FuelCellGas
  density = 0.0
  isVisible = false
}

RESOURCE_DEFINITION
{
  name = _FuelCellShuttle
  density = 0.0
  isVisible = false
}

RESOURCE_DEFINITION
{
  name = _FuelCellCH4
  density = 0.0
  isVisible = false
}

@PART:HAS[@MODULE[ProcessController]:HAS[#resource[_FuelCell]]]:NEEDS[ProfileDefault]:LAST[Kerbalism]
{
	@tags ^=:$:, fuel cell, lqdhydrogen, lqdoxygen, generator
}

RESOURCE_DEFINITION
{
  name = _WaterElectrolysis
  density = 0.0
  isVisible = false
}
@PART:HAS[@MODULE[ProcessController]:HAS[#resource[_WaterElectrolysis]]]:NEEDS[ProfileDefault]:LAST[Kerbalism]
{
	@tags ^=:$:, water electrolysis, water, electrolysis, hydrogen, oxygen
}

RESOURCE_DEFINITION
{
  name = _WaterRecycler
  density = 0.0
  isVisible = false
}
@PART:HAS[@MODULE[ProcessController]:HAS[#resource[_WaterRecycler]]]:NEEDS[ProfileDefault]:LAST[Kerbalism]
{
	@tags ^=:$:, water recycler, water, wastewater, ammonia
}

RESOURCE_DEFINITION
{
  name = _MonopropAPU
  density = 0.0
  isVisible = false
}

RESOURCE_DEFINITION
{
  name = _Sabatier
  density = 0.0
  isVisible = false
}
@PART:HAS[@MODULE[ProcessController]:HAS[#resource[_Sabatier]]]:NEEDS[ProfileDefault]:LAST[Kerbalism]
{
	@tags ^=:$:, sabatier, sabatier reactor, methane, co2, water, lqdmethane
}

RESOURCE_DEFINITION
{
  name = _BraytonGenerator
  density = 0.0
  isVisible = false
}
@PART:HAS[@MODULE[ProcessController]:HAS[#resource[_BraytonGenerator]]]:NEEDS[ProfileDefault]:LAST[Kerbalism]
{
	@tags ^=:$:, nuclear engine, generator, nuclear generator, brayton generator
}

RESOURCE_DEFINITION
{
  name = _BraytonGeneratorUN
  density = 0.0
  isVisible = false
}
@PART:HAS[@MODULE[ProcessController]:HAS[#resource[_BraytonGeneratorUN]]]:NEEDS[ProfileDefault]:LAST[Kerbalism]
{
	@tags ^=:$:, nuclear engine, generator, nuclear generator, brayton generator
}

RESOURCE_DEFINITION
{
  name = _TurbineGenerator
  density = 0.0
  isVisible = false
}
@PART:HAS[@MODULE[ProcessController]:HAS[#resource[_TurbineGenerator]]]:NEEDS[ProfileDefault]:LAST[Kerbalism]
{
	@tags ^=:$:, nuclear engine, generator, nuclear generator, turbine generator
}


RESOURCE_DEFINITION
{
  name = _OXConverter
  density = 0.0
  isVisible = false
}
@PART:HAS[@MODULE[ProcessController]:HAS[#resource[_OXConverter]]]:NEEDS[ProfileDefault]:LAST[Kerbalism]
{
	@tags ^=:$:, lo2, lox, lqdoxygen, oxygen liquifier, liquifier, liquefaction, liquid oxygen, oxygen converter, converter
}

RESOURCE_DEFINITION
{
  name = _LOXConverter
  density = 0.0
  isVisible = false
}
@PART:HAS[@MODULE[ProcessController]:HAS[#resource[_LOXConverter]]]:NEEDS[ProfileDefault]:LAST[Kerbalism]
{
	@tags ^=:$:, o2, ox, oxygen, lqdoxygen evaporator, evaporator, gas, oxygen converter, converter
}

RESOURCE_DEFINITION
{
  name = _LH2Converter
  density = 0.0
  isVisible = false
}
@PART:HAS[@MODULE[ProcessController]:HAS[#resource[_LH2Converter]]]:NEEDS[ProfileDefault]:LAST[Kerbalism]
{
	@tags ^=:$:, h2, hydrogen, lqdhydrogen evaporator, evaporator, gas, hydrogen converter, converter
}

RESOURCE_DEFINITION
{
  name = _H2Converter
  density = 0.0
  isVisible = false
}
@PART:HAS[@MODULE[ProcessController]:HAS[#resource[_H2Converter]]]:NEEDS[ProfileDefault]:LAST[Kerbalism]
{
	@tags ^=:$:, lh2, lqdhydrogen, hydrogen liquifier, liquefier, liquefaction, liquid hydrogen, hydrogen converter, converter
}

RESOURCE_DEFINITION
{
  name = _LCH4Converter
  density = 0.0
  isVisible = false
}
@PART:HAS[@MODULE[ProcessController]:HAS[#resource[_LCH4Converter]]]:NEEDS[ProfileDefault]:LAST[Kerbalism]
{
	@tags ^=:$:, ch4, methane, lqdmethane evaporator, evaporator, gas, methane converter, converter
}

RESOURCE_DEFINITION
{
  name = _CH4Converter
  density = 0.0
  isVisible = false
}
@PART:HAS[@MODULE[ProcessController]:HAS[#resource[_CH4Converter]]]:NEEDS[ProfileDefault]:LAST[Kerbalism]
{
	@tags ^=:$:, lch4, lqdmethane, methane liquifier, liquefier, liquefaction, liquid methane, methane converter, converter
}

RESOURCE_DEFINITION
{
  name = _RP1Vaporizer
  density = 0.0
  isVisible = false
}
@PART:HAS[@MODULE[ProcessController]:HAS[#resource[_RP1Vaporizer]]]:NEEDS[ProfileDefault]:LAST[Kerbalism]
{
	@tags ^=:$:, rp1, kerosene, lqdoxygen, oxygen vaporizer, burner, vaporizer, oxygen gas, oxygen converter, converter
}

RESOURCE_DEFINITION
{
  name = _RG1Vaporizer
  density = 0.0
  isVisible = false
}
@PART:HAS[@MODULE[ProcessController]:HAS[#resource[_RG1Vaporizer]]]:NEEDS[ProfileDefault]:LAST[Kerbalism]
{
	@tags ^=:$:, rg1, kerosene, lqdoxygen, oxygen vaporizer, burner, vaporizer, oxygen gas, oxygen converter, converter
}

RESOURCE_DEFINITION
{
  name = _SyntinVaporizer
  density = 0.0
  isVisible = false
}
@PART:HAS[@MODULE[ProcessController]:HAS[#resource[_SyntinVaporizer]]]:NEEDS[ProfileDefault]:LAST[Kerbalism]
{
	@tags ^=:$:, syntin, kerosene, lqdoxygen, oxygen vaporizer, burner, vaporizer, oxygen gas, oxygen converter, converter
}

RESOURCE_DEFINITION
{
  name = _EthanolVaporizer
  density = 0.0
  isVisible = false
}
@PART:HAS[@MODULE[ProcessController]:HAS[#resource[_EthanolVaporizer]]]:NEEDS[ProfileDefault]:LAST[Kerbalism]
{
	@tags ^=:$:, ethanol, lqdoxygen, oxygen vaporizer, burner, vaporizer, oxygen gas, oxygen converter, converter
}

RESOURCE_DEFINITION
{
  name = _MethaneVaporizer
  density = 0.0
  isVisible = false
}
@PART:HAS[@MODULE[ProcessController]:HAS[#resource[_MethaneVaporizer]]]:NEEDS[ProfileDefault]:LAST[Kerbalism]
{
	@tags ^=:$:, methane, oxygen, lqdoxygen, lqdmethane, methane oxygen vaporizer, burner, vaporizer, oxygen gas, methane gas, methane oxygen converter, converter
}

RESOURCE_DEFINITION
{
  name = _HydrogenVaporizer
  density = 0.0
  isVisible = false
}
@PART:HAS[@MODULE[ProcessController]:HAS[#resource[_HydrogenVaporizer]]]:NEEDS[ProfileDefault]:LAST[Kerbalism]
{
	@tags ^=:$:, hydrogen, oxygen, lqdoxygen, lqdhydrogen, hydrogen oxygen vaporizer, burner, vaporizer, oxygen gas, hydrogen gas, hydrogen oxygen converter, converter
}

RESOURCE_DEFINITION
{
  name = _ClampPump
  density = 0.0
  isVisible = false
}
@PART:HAS[@MODULE[ProcessController]:HAS[#resource[_ClampPump]]]:NEEDS[ProfileDefault]:LAST[Kerbalism]
{
	@tags ^=:$:, clamp, launch clamp, clamp generator
}

RESOURCE_DEFINITION
{
  name = _RegolithCompacter
  density = 0.0
  isVisible = false
}
@PART:HAS[@MODULE[ProcessController]:HAS[#resource[_RegolithCompacter]]]:NEEDS[ProfileDefault]:LAST[Kerbalism]
{
	@tags ^=:$:, regolith, regolith compacter, shielding
}

RESOURCE_DEFINITION
{
  name = _SickbayColony
  density = 0.0
  isVisible = false
}
@PART:HAS[@MODULE[Sickbay]:HAS[#resource[_SickbayColony]]]:NEEDS[ProfileDefault]:LAST[Kerbalism]
{
	@tags ^=:$:, sickbay, stress, colony, habitation
}

RESOURCE_DEFINITION
{
  name = _SickbayOrbital
  density = 0.0
  isVisible = false
}
@PART:HAS[@MODULE[Sickbay]:HAS[#resource[_SickbayOrbital]]]:NEEDS[ProfileDefault]:LAST[Kerbalism]
{
	@tags ^=:$:, sickbay, stress, colony, habitation
}

RESOURCE_DEFINITION
{
  name = _SickbayTV
  density = 0.0
  isVisible = false
}
@PART:HAS[@MODULE[Sickbay]:HAS[#resource[_SickbayTV]]]:NEEDS[ProfileDefault]:LAST[Kerbalism]
{
	@tags ^=:$:, sickbay, stress, colony, habitation
}

RESOURCE_DEFINITION
{
  name = _SickbayRDU
  density = 0.0
  isVisible = false
}
@PART:HAS[@MODULE[Sickbay]:HAS[#resource[_SickbayRDU]]]:NEEDS[ProfileDefault]:LAST[Kerbalism]
{
	@tags ^=:$:, sickbay, colony, habitation, radiation
}


RESOURCE_DEFINITION
{
	name = _FreezeAmmonia
	density = 0.0
	isVisible = false
}

RESOURCE_DEFINITION
{
	name = _ThawAmmonia
	density = 0.0
	isVisible = false
}

RESOURCE_DEFINITION
{
	name = _FreezeCarbonDioxide
	density = 0.0
	isVisible = false
}

RESOURCE_DEFINITION
{
	name = _ThawCarbonDioxide
	density = 0.0
	isVisible = false
}

RESOURCE_DEFINITION
{
	name = _FreezeCarbonMonoxide
	density = 0.0
	isVisible = false
}

RESOURCE_DEFINITION
{
	name = _ThawCarbonMonoxide
	density = 0.0
	isVisible = false
}

RESOURCE_DEFINITION
{
	name = _FreezeNitrogen
	density = 0.0
	isVisible = false
}

RESOURCE_DEFINITION
{
	name = _ThawNitrogen
	density = 0.0
	isVisible = false
}

RESOURCE_DEFINITION
{
	name = _Hydrolox
	density = 0.0
	isVisible = false
}

RESOURCE_DEFINITION
{
	name = _Kerolox
	density = 0.0
	isVisible = false
}

RESOURCE_DEFINITION
{
	name = _Methalox
	density = 0.0
	isVisible = false
}

RESOURCE_DEFINITION
{
	name = _Hypergolic
	density = 0.0
	isVisible = false
}

RESOURCE_DEFINITION
{
	name = _Aerozine50
	density = 0.0
	isVisible = false
}

RESOURCE_DEFINITION
{
	name = _NitrogenTetroxide
	density = 0.0
	isVisible = false
}

RESOURCE_DEFINITION
{
	name = _HydrazineA
	density = 0.0
	isVisible = false
}

RESOURCE_DEFINITION
{
	name = _HydrazineB
	density = 0.0
	isVisible = false
}

RESOURCE_DEFINITION
{
	name = _AmmoniaBrewer
	density = 0.0
	isVisible = false
}

RESOURCE_DEFINITION
{
	name = _SabatierProcess
	density = 0.0
	isVisible = false
}

RESOURCE_DEFINITION
{
	name = _HaberProcess
	density = 0.0
	isVisible = false
}

RESOURCE_DEFINITION
{
	name = _SelectiveCatalyticOxidation
	density = 0.0
	isVisible = false
}

RESOURCE_DEFINITION
{
	name = _CarbonMonoxideA
	density = 0.0
	isVisible = false
}

RESOURCE_DEFINITION
{
	name = _CarbonMonoxideB
	density = 0.0
	isVisible = false
}

RESOURCE_DEFINITION
{
	name = _SolidOxideElectrolysis
	density = 0.0
	isVisible = false
}

RESOURCE_DEFINITION
{
	name = _MoltenRegolithElectrolysis
	density = 0.0
	isVisible = false
}

RESOURCE_DEFINITION
{
	name = _MoltenRegolithElectrolysisRock
	density = 0.0
	isVisible = false
}

RESOURCE_DEFINITION
{
	name = _AluminaSplitter
	density = 0.0
	isVisible = false
}

RESOURCE_DEFINITION
{
	name = _CarbonExtractor
	density = 0.0
	isVisible = false
}

RESOURCE_DEFINITION
{
	name = _CarbonFuser
	density = 0.0
	isVisible = false
}

RESOURCE_DEFINITION
{
	name = _carbonDioxideSplitter
	density = 0.0
	isVisible = false
}

RESOURCE_DEFINITION
{
	name = _HydratesSplitter
	density = 0.0
	isVisible = false
}

RESOURCE_DEFINITION
{
	name = _MonaziteSplitter
	density = 0.0
	isVisible = false
}

RESOURCE_DEFINITION
{
	name = _SilicatesSplitter
	density = 0.0
	isVisible = false
}

RESOURCE_DEFINITION
{
	name = _SpodumeneSplitter
	density = 0.0
	isVisible = false
}

RESOURCE_DEFINITION
{
	name = _DeuteriumProduction
	density = 0.0
	isVisible = false
}

RESOURCE_DEFINITION
{
	name = _GlykerolBrewer
	density = 0.0
	isVisible = false
}

RESOURCE_DEFINITION
{
	name =_FreezeHydrogen
	density = 0.0
	isVisible = false
}
RESOURCE_DEFINITION
{
	name =_ThawHydrogen
	density = 0.0
	isVisible = false
}
RESOURCE_DEFINITION
{
	name =_FreezeMethane
	density = 0.0
	isVisible = false
}
RESOURCE_DEFINITION
{
	name =_ThawMethane
	density = 0.0
	isVisible = false
}
RESOURCE_DEFINITION
{
	name =_FreezeOxygen
	density = 0.0
	isVisible = false
}
RESOURCE_DEFINITION
{
	name =_ThawOxygen
	density = 0.0
	isVisible = false
}


RESOURCE_DEFINITION
{
	name =_KerbalismFuelCell
	density = 0.0
	isVisible = false
}
RESOURCE_DEFINITION
{
	name =_KerbalismLiquidFuelCell
	density = 0.0
	isVisible = false
}


//Don't let the fuel dump valve touch kerbalism hidden resources
@RESOURCE_DEFINITION[_*]:NEEDS[ProfileDefault]:LAST[Kerbalism]
{
  RESOURCE_DRAIN_DEFINITION
  {
    isDrainable = false
    showDrainFX = false
  }
}
